<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.8">
  <compound kind="file">
    <name>array_wrapper.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/common/</path>
    <filename>array__wrapper_8hpp.html</filename>
    <class kind="class">ArrayWrapper</class>
  </compound>
  <compound kind="file">
    <name>conversion_helpers.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/common/</path>
    <filename>conversion__helpers_8hpp.html</filename>
    <member kind="function">
      <type>__device__ __host__ T</type>
      <name>Clamp</name>
      <anchorfile>conversion__helpers_8hpp.html</anchorfile>
      <anchor>aeff9cb787dc69c0b01d6a6c7410e475b</anchor>
      <arglist>(U value, T lo, T hi)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ U</type>
      <name>RoundImplementationsFromYUV</name>
      <anchorfile>conversion__helpers_8hpp.html</anchorfile>
      <anchor>a2875c95407d4870e84f7d59b41063e2a</anchor>
      <arglist>(U u)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ U</type>
      <name>RoundImplementationsToYUV</name>
      <anchorfile>conversion__helpers_8hpp.html</anchorfile>
      <anchor>a96bf17b8a5f3b0e211a89067308feee9</anchor>
      <arglist>(U u)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>math_vector.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/common/</path>
    <filename>math__vector_8hpp.html</filename>
    <class kind="class">MathVector</class>
  </compound>
  <compound kind="file">
    <name>strided_data_wrap.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/common/</path>
    <filename>strided__data__wrap_8hpp.html</filename>
    <includes id="exception_8hpp" name="exception.hpp" local="yes" import="no" module="no" objc="no">core/exception.hpp</includes>
    <includes id="status__type_8h" name="status_type.h" local="yes" import="no" module="no" objc="no">core/status_type.h</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="tensor__data_8hpp" name="tensor_data.hpp" local="yes" import="no" module="no" objc="no">core/tensor_data.hpp</includes>
    <class kind="class">roccv::detail::StridedDataWrap</class>
    <namespace>roccv</namespace>
    <namespace>roccv::detail</namespace>
  </compound>
  <compound kind="file">
    <name>validation_helpers.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/common/</path>
    <filename>validation__helpers_8hpp.html</filename>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_TENSOR_CHANNELS</name>
      <anchorfile>validation__helpers_8hpp.html</anchorfile>
      <anchor>a38de531635834c62ed3d4f0cdac8c73d</anchor>
      <arglist>(tensor,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_TENSOR_COMPARISON</name>
      <anchorfile>validation__helpers_8hpp.html</anchorfile>
      <anchor>a7ed9e5f641f39588f12866d42fdd95b4</anchor>
      <arglist>(comparison)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_TENSOR_DATATYPES</name>
      <anchorfile>validation__helpers_8hpp.html</anchorfile>
      <anchor>a951a0461c90bedab02f4689dd93b09ca</anchor>
      <arglist>(tensor,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_TENSOR_DEVICE</name>
      <anchorfile>validation__helpers_8hpp.html</anchorfile>
      <anchor>a901b90083bd6bc230fd8894cdd0f5dbe</anchor>
      <arglist>(tensor, tensor_device)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_TENSOR_LAYOUT</name>
      <anchorfile>validation__helpers_8hpp.html</anchorfile>
      <anchor>ad3193134cccd3d863cc969e01467058b</anchor>
      <arglist>(tensor,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>data_type.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>data__type_8hpp.html</filename>
    <includes id="exception_8hpp" name="exception.hpp" local="yes" import="no" module="no" objc="no">exception.hpp</includes>
    <includes id="util__enums_8h" name="util_enums.h" local="yes" import="no" module="no" objc="no">util_enums.h</includes>
    <class kind="class">roccv::DataType</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>casting.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/detail/</path>
    <filename>casting_8hpp.html</filename>
    <includes id="type__traits_8hpp" name="type_traits.hpp" local="yes" import="no" module="no" objc="no">core/detail/type_traits.hpp</includes>
    <namespace>roccv</namespace>
    <namespace>roccv::detail</namespace>
  </compound>
  <compound kind="file">
    <name>math.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/detail/math/</path>
    <filename>math_8hpp.html</filename>
    <class kind="class">roccv::detail::math::Matrix</class>
    <class kind="class">roccv::detail::math::Vector</class>
    <namespace>roccv</namespace>
    <namespace>roccv::detail</namespace>
    <namespace>roccv::detail::math</namespace>
  </compound>
  <compound kind="file">
    <name>vectorized_type_math.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/detail/math/</path>
    <filename>vectorized__type__math_8hpp.html</filename>
    <includes id="type__traits_8hpp" name="type_traits.hpp" local="yes" import="no" module="no" objc="no">core/detail/type_traits.hpp</includes>
    <namespace>roccv</namespace>
    <namespace>roccv::detail</namespace>
    <namespace>roccv::detail::math</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_VECTOR_BINARY_FUNC</name>
      <anchorfile>vectorized__type__math_8hpp.html</anchorfile>
      <anchor>a51b8bf4dda5729c1ee38c57a18ce954c</anchor>
      <arglist>(FUNC, NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_VECTOR_BINARY_OP</name>
      <anchorfile>vectorized__type__math_8hpp.html</anchorfile>
      <anchor>aea4b5264836ffd8a4191fcfccbdbee0b</anchor>
      <arglist>(OPERATOR, NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_VECTOR_UNARY_FUNC</name>
      <anchorfile>vectorized__type__math_8hpp.html</anchorfile>
      <anchor>a80041b333296b630ec6253c1fd50d121</anchor>
      <arglist>(FUNC, NAME)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_traits.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/detail/</path>
    <filename>type__traits_8hpp.html</filename>
    <class kind="struct">roccv::detail::HasTypeTraits_t</class>
    <namespace>roccv</namespace>
    <namespace>roccv::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_TYPE_TRAITS</name>
      <anchorfile>type__traits_8hpp.html</anchorfile>
      <anchor>a09686c83e02294531cfedad7b8564850</anchor>
      <arglist>(COMPOUND_TYPE, BASE_TYPE, ELEMENTS, COMPONENTS)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_TYPE_TRAITS_0_TO_4</name>
      <anchorfile>type__traits_8hpp.html</anchorfile>
      <anchor>a5ce2cd9463b6058ede760b18cda39343</anchor>
      <arglist>(COMPOUND_TYPE, BASE_TYPE)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vector_utils.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/detail/</path>
    <filename>vector__utils_8hpp.html</filename>
    <includes id="type__traits_8hpp" name="type_traits.hpp" local="yes" import="no" module="no" objc="no">core/detail/type_traits.hpp</includes>
    <namespace>roccv</namespace>
    <namespace>roccv::detail</namespace>
  </compound>
  <compound kind="file">
    <name>exception.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>exception_8hpp.html</filename>
    <includes id="status__type_8h" name="status_type.h" local="yes" import="no" module="no" objc="no">status_type.h</includes>
    <class kind="class">roccv::Exception</class>
    <namespace>roccv</namespace>
    <namespace>roccv::ExceptionMessage</namespace>
  </compound>
  <compound kind="file">
    <name>hip_assert.h</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>hip__assert_8h.html</filename>
    <includes id="exception_8hpp" name="exception.hpp" local="yes" import="no" module="no" objc="no">core/exception.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>assertm</name>
      <anchorfile>hip__assert_8h.html</anchorfile>
      <anchor>a1c958a8be4772ba46d5d61cd111c4a7b</anchor>
      <arglist>(exp, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HIP_ASSERT</name>
      <anchorfile>hip__assert_8h.html</anchorfile>
      <anchor>a682ce98767bf61df191c639de000fc30</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HIP_VALIDATE_NO_ERRORS</name>
      <anchorfile>hip__assert_8h.html</anchorfile>
      <anchor>a3d7d620dc527870e346cf6f3a93244c4</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>image_format.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>image__format_8hpp.html</filename>
    <includes id="data__type_8hpp" name="data_type.hpp" local="yes" import="no" module="no" objc="no">data_type.hpp</includes>
    <class kind="class">roccv::ImageFormat</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>status_type.h</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>status__type_8h.html</filename>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>tensor.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>tensor_8hpp.html</filename>
    <includes id="tensor__data_8hpp" name="tensor_data.hpp" local="yes" import="no" module="no" objc="no">tensor_data.hpp</includes>
    <includes id="tensor__requirements_8hpp" name="tensor_requirements.hpp" local="yes" import="no" module="no" objc="no">tensor_requirements.hpp</includes>
    <includes id="tensor__storage_8hpp" name="tensor_storage.hpp" local="yes" import="no" module="no" objc="no">tensor_storage.hpp</includes>
    <class kind="class">roccv::Tensor</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>tensor_buffer.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>tensor__buffer_8hpp.html</filename>
    <includes id="tensor__layout_8hpp" name="tensor_layout.hpp" local="yes" import="no" module="no" objc="no">tensor_layout.hpp</includes>
    <class kind="struct">roccv::TensorBuffer</class>
    <class kind="struct">roccv::TensorBufferStrided</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>tensor_data.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>tensor__data_8hpp.html</filename>
    <includes id="data__type_8hpp" name="data_type.hpp" local="yes" import="no" module="no" objc="no">data_type.hpp</includes>
    <includes id="tensor__buffer_8hpp" name="tensor_buffer.hpp" local="yes" import="no" module="no" objc="no">tensor_buffer.hpp</includes>
    <includes id="tensor__shape_8hpp" name="tensor_shape.hpp" local="yes" import="no" module="no" objc="no">tensor_shape.hpp</includes>
    <class kind="class">roccv::TensorData</class>
    <class kind="class">roccv::TensorDataStrided</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>tensor_layout.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>tensor__layout_8hpp.html</filename>
    <includes id="exception_8hpp" name="exception.hpp" local="yes" import="no" module="no" objc="no">exception.hpp</includes>
    <includes id="util__enums_8h" name="util_enums.h" local="yes" import="no" module="no" objc="no">util_enums.h</includes>
    <class kind="class">roccv::TensorLayout</class>
    <class kind="struct">roccv::TensorLayoutDesc</class>
    <namespace>roccv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ROCCV_TENSOR_MAX_RANK</name>
      <anchorfile>tensor__layout_8hpp.html</anchorfile>
      <anchor>a5fc9cd7db841eb7a72c1f9fe727fcc04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tensor_requirements.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>tensor__requirements_8hpp.html</filename>
    <includes id="data__type_8hpp" name="data_type.hpp" local="yes" import="no" module="no" objc="no">data_type.hpp</includes>
    <includes id="tensor__layout_8hpp" name="tensor_layout.hpp" local="yes" import="no" module="no" objc="no">tensor_layout.hpp</includes>
    <class kind="struct">roccv::TensorRequirements</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>tensor_shape.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>tensor__shape_8hpp.html</filename>
    <includes id="tensor__layout_8hpp" name="tensor_layout.hpp" local="yes" import="no" module="no" objc="no">tensor_layout.hpp</includes>
    <class kind="class">roccv::TensorShape</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>tensor_storage.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>tensor__storage_8hpp.html</filename>
    <includes id="util__enums_8h" name="util_enums.h" local="yes" import="no" module="no" objc="no">core/util_enums.h</includes>
    <class kind="class">roccv::TensorStorage</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>util_enums.h</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/</path>
    <filename>util__enums_8h.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>eChannelType</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>ade439766996cde7c27ee01e826ccef14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F_RGB</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>ade439766996cde7c27ee01e826ccef14aa6b9a78ac8d0402486f96d8ad7923d93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BGR</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>ade439766996cde7c27ee01e826ccef14a4a19a93c929964c201e01c8352dc8b9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YUV</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>ade439766996cde7c27ee01e826ccef14af726371acfea68d8e6506b9ab7d817f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YVU</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>ade439766996cde7c27ee01e826ccef14a68e71c1f55a3675b47ce615d0bc4bbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Grayscale</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>ade439766996cde7c27ee01e826ccef14ad393599abdc2ec6a93956b1b782b4698</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eDataType</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>acc461328b82c34604e8b428326a52183</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATA_TYPE_U8</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>acc461328b82c34604e8b428326a52183aa067375620db4d6336d68f82da3b44d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATA_TYPE_S8</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>acc461328b82c34604e8b428326a52183a0509f26dc04cac0287e23a840ee5f031</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATA_TYPE_U32</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>acc461328b82c34604e8b428326a52183a2060a89ce8797207f5c077782e68b264</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATA_TYPE_S32</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>acc461328b82c34604e8b428326a52183ad83c4722cff50ad085c991d67b16d84b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATA_TYPE_F32</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>acc461328b82c34604e8b428326a52183a599bcb2b78d69aa8b96f9ffdfae37ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATA_TYPE_4S16</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>acc461328b82c34604e8b428326a52183a21cc36f43ee581f01f301b417081991d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATA_TYPE_S16</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>acc461328b82c34604e8b428326a52183ac94be1d38bb99a6e6c5d6a0a4f46c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eDeviceType</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a4ec2e35c9447ccc1764ba80c1490a114</anchor>
      <arglist></arglist>
      <enumvalue file="util__enums_8h.html" anchor="a4ec2e35c9447ccc1764ba80c1490a114a52f9ec21735243ad9917cda3ca077d32">GPU</enumvalue>
      <enumvalue file="util__enums_8h.html" anchor="a4ec2e35c9447ccc1764ba80c1490a114a2b55387dd066c5bac646ac61543d152d">CPU</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eOwnership</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a2011abb365728e66a0131adc93454018</anchor>
      <arglist></arglist>
      <enumvalue file="util__enums_8h.html" anchor="a2011abb365728e66a0131adc93454018a258c405bc128bfac9493e8d9cf46f975">OWNING</enumvalue>
      <enumvalue file="util__enums_8h.html" anchor="a2011abb365728e66a0131adc93454018a5824b315fdbb0f42abfe1bb03f78c270">VIEW</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eTensorLayout</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a5c199c5c75ba4dd278fec6873c7bcc9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TENSOR_LAYOUT_NHWC</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a5c199c5c75ba4dd278fec6873c7bcc9eacc21f7993097e2cd90dd8feeaca53d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TENSOR_LAYOUT_HWC</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a5c199c5c75ba4dd278fec6873c7bcc9ea5fcd457837a3f757a34cdea86fa61965</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TENSOR_LAYOUT_NC</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a5c199c5c75ba4dd278fec6873c7bcc9ea7b543ea47c200c290b7fbb6252093c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TENSOR_LAYOUT_NW</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a5c199c5c75ba4dd278fec6873c7bcc9ea1ce6952c71ae83a143e051705384a5b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TENSOR_LAYOUT_N</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a5c199c5c75ba4dd278fec6873c7bcc9ea25a7983178dc77a9f4e056ae15c79779</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TENSOR_LAYOUT_NMC</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a5c199c5c75ba4dd278fec6873c7bcc9ea3a77ffeccac79ab009ebab69e4994718</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TENSOR_LAYOUT_NMD</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a5c199c5c75ba4dd278fec6873c7bcc9eac79e1bc71e0333d4aa522731045ce486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TENSOR_LAYOUT_LNHWC</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a5c199c5c75ba4dd278fec6873c7bcc9ea924a3153e74d861677e1cc9124eb419f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TENSOR_LAYOUT_NCHW</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a5c199c5c75ba4dd278fec6873c7bcc9eaa54d643f7f5d0768a94bd5c859c1595e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TENSOR_LAYOUT_NWC</name>
      <anchorfile>util__enums_8h.html</anchorfile>
      <anchor>a5c199c5c75ba4dd278fec6873c7bcc9ea28e2d244756df493f5dc65bd573f1f05</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>border_wrapper.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/wrappers/</path>
    <filename>border__wrapper_8hpp.html</filename>
    <includes id="image__wrapper_8hpp" name="image_wrapper.hpp" local="yes" import="no" module="no" objc="no">core/wrappers/image_wrapper.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <class kind="class">roccv::BorderWrapper</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>generic_tensor_wrapper.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/wrappers/</path>
    <filename>generic__tensor__wrapper_8hpp.html</filename>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <class kind="class">roccv::GenericTensorWrapper</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>image_wrapper.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/wrappers/</path>
    <filename>image__wrapper_8hpp.html</filename>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <class kind="class">roccv::ImageWrapper</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>interpolation_wrapper.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/core/wrappers/</path>
    <filename>interpolation__wrapper_8hpp.html</filename>
    <includes id="casting_8hpp" name="casting.hpp" local="yes" import="no" module="no" objc="no">core/detail/casting.hpp</includes>
    <includes id="vectorized__type__math_8hpp" name="vectorized_type_math.hpp" local="yes" import="no" module="no" objc="no">core/detail/math/vectorized_type_math.hpp</includes>
    <includes id="border__wrapper_8hpp" name="border_wrapper.hpp" local="yes" import="no" module="no" objc="no">core/wrappers/border_wrapper.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <class kind="class">roccv::InterpolationWrapper</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>i_operator.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>i__operator_8hpp.html</filename>
    <includes id="hip__assert_8h" name="hip_assert.h" local="yes" import="no" module="no" objc="no">core/hip_assert.h</includes>
    <class kind="class">roccv::IOperator</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>non_max_suppression_helpers.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/common/</path>
    <filename>non__max__suppression__helpers_8hpp.html</filename>
    <namespace>Kernels</namespace>
  </compound>
  <compound kind="file">
    <name>bilateral_filter_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>bilateral__filter__device_8hpp.html</filename>
    <includes id="kernel__helpers_8hpp" name="kernel_helpers.hpp" local="yes" import="no" module="no" objc="no">kernels/kernel_helpers.hpp</includes>
    <includes id="interpolation__wrapper_8hpp" name="interpolation_wrapper.hpp" local="yes" import="no" module="no" objc="no">core/wrappers/interpolation_wrapper.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <includes id="type__traits_8hpp" name="type_traits.hpp" local="yes" import="no" module="no" objc="no">core/detail/type_traits.hpp</includes>
    <includes id="casting_8hpp" name="casting.hpp" local="yes" import="no" module="no" objc="no">core/detail/casting.hpp</includes>
    <includes id="vector__utils_8hpp" name="vector_utils.hpp" local="yes" import="no" module="no" objc="no">core/detail/vector_utils.hpp</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>bnd_box_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>bnd__box__device_8hpp.html</filename>
    <includes id="kernel__helpers_8hpp" name="kernel_helpers.hpp" local="yes" import="no" module="no" objc="no">kernels/kernel_helpers.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>composite_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>composite__device_8hpp.html</filename>
    <includes id="casting_8hpp" name="casting.hpp" local="yes" import="no" module="no" objc="no">core/detail/casting.hpp</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>copy_make_border_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>copy__make__border__device_8hpp.html</filename>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>custom_crop_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>custom__crop__device_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>cvt_color_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>cvt__color__device_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>flip_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>flip__device_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>gamma_contrast_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>gamma__contrast__device_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>histogram_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>histogram__device_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>non_max_suppression_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>non__max__suppression__device_8hpp.html</filename>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="generic__tensor__wrapper_8hpp" name="generic_tensor_wrapper.hpp" local="yes" import="no" module="no" objc="no">core/wrappers/generic_tensor_wrapper.hpp</includes>
    <includes id="non__max__suppression__helpers_8hpp" name="non_max_suppression_helpers.hpp" local="yes" import="no" module="no" objc="no">kernels/common/non_max_suppression_helpers.hpp</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>normalize_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>normalize__device_8hpp.html</filename>
    <includes id="casting_8hpp" name="casting.hpp" local="yes" import="no" module="no" objc="no">core/detail/casting.hpp</includes>
    <includes id="vectorized__type__math_8hpp" name="vectorized_type_math.hpp" local="yes" import="no" module="no" objc="no">core/detail/math/vectorized_type_math.hpp</includes>
    <includes id="type__traits_8hpp" name="type_traits.hpp" local="yes" import="no" module="no" objc="no">core/detail/type_traits.hpp</includes>
    <includes id="vector__utils_8hpp" name="vector_utils.hpp" local="yes" import="no" module="no" objc="no">core/detail/vector_utils.hpp</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>remap_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>remap__device_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>resize_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>resize__device_8hpp.html</filename>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>thresholding_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>thresholding__device_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>warp_perspective_device.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/device/</path>
    <filename>warp__perspective__device_8hpp.html</filename>
    <includes id="interpolation__wrapper_8hpp" name="interpolation_wrapper.hpp" local="yes" import="no" module="no" objc="no">core/wrappers/interpolation_wrapper.hpp</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Device</namespace>
  </compound>
  <compound kind="file">
    <name>bilateral_filter_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>bilateral__filter__host_8hpp.html</filename>
    <includes id="kernel__helpers_8hpp" name="kernel_helpers.hpp" local="yes" import="no" module="no" objc="no">kernels/kernel_helpers.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <includes id="type__traits_8hpp" name="type_traits.hpp" local="yes" import="no" module="no" objc="no">core/detail/type_traits.hpp</includes>
    <includes id="casting_8hpp" name="casting.hpp" local="yes" import="no" module="no" objc="no">core/detail/casting.hpp</includes>
    <includes id="vector__utils_8hpp" name="vector_utils.hpp" local="yes" import="no" module="no" objc="no">core/detail/vector_utils.hpp</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>bnd_box_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>bnd__box__host_8hpp.html</filename>
    <includes id="kernel__helpers_8hpp" name="kernel_helpers.hpp" local="yes" import="no" module="no" objc="no">kernels/kernel_helpers.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>composite_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>composite__host_8hpp.html</filename>
    <includes id="casting_8hpp" name="casting.hpp" local="yes" import="no" module="no" objc="no">core/detail/casting.hpp</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>copy_make_border_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>copy__make__border__host_8hpp.html</filename>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>custom_crop_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>custom__crop__host_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>cvt_color_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>cvt__color__host_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>flip_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>flip__host_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>gamma_contrast_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>gamma__contrast__host_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>histogram_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>histogram__host_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>non_max_suppression_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>non__max__suppression__host_8hpp.html</filename>
    <includes id="generic__tensor__wrapper_8hpp" name="generic_tensor_wrapper.hpp" local="yes" import="no" module="no" objc="no">core/wrappers/generic_tensor_wrapper.hpp</includes>
    <includes id="non__max__suppression__helpers_8hpp" name="non_max_suppression_helpers.hpp" local="yes" import="no" module="no" objc="no">kernels/common/non_max_suppression_helpers.hpp</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>normalize_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>normalize__host_8hpp.html</filename>
    <includes id="casting_8hpp" name="casting.hpp" local="yes" import="no" module="no" objc="no">core/detail/casting.hpp</includes>
    <includes id="vectorized__type__math_8hpp" name="vectorized_type_math.hpp" local="yes" import="no" module="no" objc="no">core/detail/math/vectorized_type_math.hpp</includes>
    <includes id="type__traits_8hpp" name="type_traits.hpp" local="yes" import="no" module="no" objc="no">core/detail/type_traits.hpp</includes>
    <includes id="vector__utils_8hpp" name="vector_utils.hpp" local="yes" import="no" module="no" objc="no">core/detail/vector_utils.hpp</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>remap_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>remap__host_8hpp.html</filename>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>resize_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>resize__host_8hpp.html</filename>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>thresholding_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>thresholding__host_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>warp_perspective_host.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/</path>
    <filename>warp__perspective__host_8hpp.html</filename>
    <namespace>Kernels</namespace>
    <namespace>Kernels::Host</namespace>
  </compound>
  <compound kind="file">
    <name>kernel_helpers.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/</path>
    <filename>kernel__helpers_8hpp.html</filename>
    <includes id="type__traits_8hpp" name="type_traits.hpp" local="yes" import="no" module="no" objc="no">core/detail/type_traits.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <class kind="struct">ConversionFactors</class>
    <namespace>Kernels</namespace>
    <member kind="variable">
      <type>const float</type>
      <name>BT2020A</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>a1c70d5feed640dc31baecbfcd23aa504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT2020B</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>a292e4be7d60497959445a5de47c139f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT2020C</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>a27cca037c4fe728d653ef4ebbb56ae45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT2020D</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>a95024012a0561d9ca29d22754363c7a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT2020E</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>abe63b2421a6055c4e6bf96490dfc952f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT601A</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>aec1a20c2320536f3a4fcd602f47df68c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT601B</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>aac1d6f5f27359fe45f8a0c554137f4d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT601C</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>a766e355c6955d71b556ef3ae071764c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT601D</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>a3845ba86e49dd94c36fc3047fed407c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT601E</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>a103c55da543c41af45fac157e2d312e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT709A</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>a29942a262ef598bd0813a9538e0310c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT709B</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>ae70a70a314d2db7945405a7ea5eed790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT709C</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>a6c7961f194a98dbc81b4861866ae6431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT709D</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>a99f16a312558b45bec7f739817af58f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>BT709E</name>
      <anchorfile>kernel__helpers_8hpp.html</anchorfile>
      <anchor>a210656ae669ffddd62fa3e5f1f68ed25</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>op_bilateral_filter.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__bilateral__filter_8hpp.html</filename>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="no" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <class kind="class">roccv::BilateralFilter</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_bnd_box.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__bnd__box_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="no" import="no" module="no" objc="no">operator_types.h</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="no" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <class kind="class">roccv::BndBox</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_composite.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__composite_8hpp.html</filename>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="yes" import="no" module="no" objc="no">i_operator.hpp</includes>
    <class kind="class">roccv::Composite</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_copy_make_border.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__copy__make__border_8hpp.html</filename>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="util__enums_8h" name="util_enums.h" local="yes" import="no" module="no" objc="no">core/util_enums.h</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="yes" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <class kind="class">roccv::CopyMakeBorder</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_custom_crop.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__custom__crop_8hpp.html</filename>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="no" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <class kind="class">roccv::CustomCrop</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_cvt_color.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__cvt__color_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="no" import="no" module="no" objc="no">operator_types.h</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="no" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <class kind="class">roccv::CvtColor</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_flip.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__flip_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="no" import="no" module="no" objc="no">operator_types.h</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="no" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <class kind="class">roccv::Flip</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_gamma_contrast.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__gamma__contrast_8hpp.html</filename>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="yes" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <class kind="class">roccv::GammaContrast</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_histogram.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__histogram_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="no" import="no" module="no" objc="no">operator_types.h</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="no" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <class kind="class">roccv::Histogram</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_non_max_suppression.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__non__max__suppression_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="no" import="no" module="no" objc="no">operator_types.h</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="yes" import="no" module="no" objc="no">i_operator.hpp</includes>
    <class kind="class">roccv::NonMaximumSuppression</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_normalize.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__normalize_8hpp.html</filename>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="yes" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <class kind="class">roccv::Normalize</class>
    <namespace>roccv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ROCCV_NORMALIZE_SCALE_IS_STDDEV</name>
      <anchorfile>op__normalize_8hpp.html</anchorfile>
      <anchor>aa69633d1ad9436a3938195f428911270</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>op_remap.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__remap_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="no" import="no" module="no" objc="no">operator_types.h</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="no" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <class kind="class">roccv::Remap</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_resize.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__resize_8hpp.html</filename>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="yes" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <class kind="class">roccv::Resize</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_rotate.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__rotate_8hpp.html</filename>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="no" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="op__warp__affine_8hpp" name="op_warp_affine.hpp" local="yes" import="no" module="no" objc="no">op_warp_affine.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <class kind="class">roccv::Rotate</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_thresholding.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__thresholding_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="no" import="no" module="no" objc="no">operator_types.h</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="no" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <class kind="class">roccv::Threshold</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_warp_affine.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__warp__affine_8hpp.html</filename>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="yes" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="op__warp__perspective_8hpp" name="op_warp_perspective.hpp" local="yes" import="no" module="no" objc="no">op_warp_perspective.hpp</includes>
    <includes id="operator__types_8h" name="operator_types.h" local="yes" import="no" module="no" objc="no">operator_types.h</includes>
    <class kind="class">roccv::WarpAffine</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>op_warp_perspective.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>op__warp__perspective_8hpp.html</filename>
    <includes id="operator__types_8h" name="operator_types.h" local="no" import="no" module="no" objc="no">operator_types.h</includes>
    <includes id="i__operator_8hpp" name="i_operator.hpp" local="no" import="no" module="no" objc="no">i_operator.hpp</includes>
    <includes id="tensor_8hpp" name="tensor.hpp" local="yes" import="no" module="no" objc="no">core/tensor.hpp</includes>
    <class kind="class">roccv::WarpPerspective</class>
    <namespace>roccv</namespace>
  </compound>
  <compound kind="file">
    <name>operator_types.h</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>operator__types_8h.html</filename>
    <class kind="struct">BndBox_t</class>
    <class kind="struct">BndBoxes_t</class>
    <class kind="struct">Box_t</class>
    <class kind="struct">Color4_t</class>
    <class kind="struct">Rect_t</class>
    <class kind="struct">roccv::Size2D</class>
    <namespace>roccv</namespace>
    <member kind="typedef">
      <type>float</type>
      <name>PerspectiveTransform</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a58e7332810cdbd5af8382d23016d47f5</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eAxis</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ac8a8fd6e707e92c323faa53468caab01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTH</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ac8a8fd6e707e92c323faa53468caab01a627abe5a430420baf29ebe1940a7f2fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ac8a8fd6e707e92c323faa53468caab01a58833a3110c570fb05130d40c365d1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ac8a8fd6e707e92c323faa53468caab01a5596231eabd6cf29050967d5ac83ad84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eBorderType</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ace89cf8b7e2015ff86ed87ec9ce229c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BORDER_TYPE_CONSTANT</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ace89cf8b7e2015ff86ed87ec9ce229c0a8f0b712b430755027ee4b24d9ed07484</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BORDER_TYPE_REPLICATE</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ace89cf8b7e2015ff86ed87ec9ce229c0a0f191bca1a489b62e100025d6cb87182</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BORDER_TYPE_REFLECT</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ace89cf8b7e2015ff86ed87ec9ce229c0abd373139d042f70c37b9112d41cacfa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BORDER_TYPE_WRAP</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ace89cf8b7e2015ff86ed87ec9ce229c0a530ffe5b87dd5df95e3badd23f827f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eColorConversionCode</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ad88c472cb54bd15d131a69bc7dac1ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_RGB2YUV</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ad88c472cb54bd15d131a69bc7dac1ff3a7b0ce88b636e49c75fa8d2567dc6d5f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_BGR2YUV</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ad88c472cb54bd15d131a69bc7dac1ff3a95c8016e83ea3e4b13c849338723c1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_YUV2RGB</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ad88c472cb54bd15d131a69bc7dac1ff3a600bac076de8715a4dcc5aad2764c1fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_YUV2BGR</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ad88c472cb54bd15d131a69bc7dac1ff3afb93a49b08e9629bc192b5369bed1190</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_RGB2BGR</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ad88c472cb54bd15d131a69bc7dac1ff3a2286a9dc9b750c433261606e25e4e820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_BGR2RGB</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ad88c472cb54bd15d131a69bc7dac1ff3a0aabe99eba783f669ee1efe40ab2ff70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_RGB2GRAY</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ad88c472cb54bd15d131a69bc7dac1ff3a703be91982f5cf3c6faa1ae51488c2b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_BGR2GRAY</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>ad88c472cb54bd15d131a69bc7dac1ff3aa6915edf07674bb6f929adcff60a1b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eColorSpec</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a06bbfea44fc42f265190da643f3b3f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BT601</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a06bbfea44fc42f265190da643f3b3f52a2bffd5fdd8cc879f171301e319182a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BT709</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a06bbfea44fc42f265190da643f3b3f52ad3f14835a92a5d3be6a8dceb52f65fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BT2020</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a06bbfea44fc42f265190da643f3b3f52a132c581a7019cc5499a29fbefcfd6f17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eInterpolationType</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a09a270009d7de1076424a0201917c528</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERP_TYPE_NEAREST</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a09a270009d7de1076424a0201917c528a800e315ed9a1a49be4a5589b9fbf1450</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERP_TYPE_LINEAR</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a09a270009d7de1076424a0201917c528a5865c328a98832cbe1d53db3db6d6aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERP_TYPE_CUBIC</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a09a270009d7de1076424a0201917c528a25b6ba9b303f51105a632804b9ac643e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eRemapType</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>adb0c14783c37c072b2263247e84398ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REMAP_ABSOLUTE</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>adb0c14783c37c072b2263247e84398ffa99b41a71a669af6c6b42a251e7737055</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REMAP_ABSOLUTE_NORMALIZED</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>adb0c14783c37c072b2263247e84398ffabdff720f1619f436d9df1930bbd2dcad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REMAP_RELATIVE_NORMALIZED</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>adb0c14783c37c072b2263247e84398ffa74659ddc8c47ce6ec82cba11afc4876e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eThresholdType</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a44174ca95d2566db80c7404242bf81a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THRESH_BINARY</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a44174ca95d2566db80c7404242bf81a5afed35ac7de4cb4bf91d53c83b9e6070c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THRESH_BINARY_INV</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a44174ca95d2566db80c7404242bf81a5a6d4fd6cb727fc388dba2c4a6b09b5d1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THRESH_TRUNC</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a44174ca95d2566db80c7404242bf81a5a56b40f673adffeb4115e164a4d1c6b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THRESH_TOZERO</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a44174ca95d2566db80c7404242bf81a5afe2d957f2c924cea96ec3281a5a07614</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THRESH_TOZERO_INV</name>
      <anchorfile>operator__types_8h.html</anchorfile>
      <anchor>a44174ca95d2566db80c7404242bf81a5a24bf1e1143307a00ca27484b434a3bf5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>roccv_operators.hpp</name>
    <path>/mnt/c/Users/spolifro/Documents/rocCV/include/</path>
    <filename>roccv__operators_8hpp.html</filename>
    <includes id="op__bilateral__filter_8hpp" name="op_bilateral_filter.hpp" local="yes" import="no" module="no" objc="no">op_bilateral_filter.hpp</includes>
    <includes id="op__bnd__box_8hpp" name="op_bnd_box.hpp" local="yes" import="no" module="no" objc="no">op_bnd_box.hpp</includes>
    <includes id="op__custom__crop_8hpp" name="op_custom_crop.hpp" local="yes" import="no" module="no" objc="no">op_custom_crop.hpp</includes>
    <includes id="op__cvt__color_8hpp" name="op_cvt_color.hpp" local="yes" import="no" module="no" objc="no">op_cvt_color.hpp</includes>
    <includes id="op__flip_8hpp" name="op_flip.hpp" local="yes" import="no" module="no" objc="no">op_flip.hpp</includes>
    <includes id="op__gamma__contrast_8hpp" name="op_gamma_contrast.hpp" local="yes" import="no" module="no" objc="no">op_gamma_contrast.hpp</includes>
    <includes id="op__histogram_8hpp" name="op_histogram.hpp" local="yes" import="no" module="no" objc="no">op_histogram.hpp</includes>
    <includes id="op__non__max__suppression_8hpp" name="op_non_max_suppression.hpp" local="yes" import="no" module="no" objc="no">op_non_max_suppression.hpp</includes>
    <includes id="op__normalize_8hpp" name="op_normalize.hpp" local="yes" import="no" module="no" objc="no">op_normalize.hpp</includes>
    <includes id="op__remap_8hpp" name="op_remap.hpp" local="yes" import="no" module="no" objc="no">op_remap.hpp</includes>
    <includes id="op__resize_8hpp" name="op_resize.hpp" local="yes" import="no" module="no" objc="no">op_resize.hpp</includes>
    <includes id="op__rotate_8hpp" name="op_rotate.hpp" local="yes" import="no" module="no" objc="no">op_rotate.hpp</includes>
    <includes id="op__thresholding_8hpp" name="op_thresholding.hpp" local="yes" import="no" module="no" objc="no">op_thresholding.hpp</includes>
    <includes id="op__warp__affine_8hpp" name="op_warp_affine.hpp" local="yes" import="no" module="no" objc="no">op_warp_affine.hpp</includes>
    <includes id="op__warp__perspective_8hpp" name="op_warp_perspective.hpp" local="yes" import="no" module="no" objc="no">op_warp_perspective.hpp</includes>
  </compound>
  <compound kind="class">
    <name>ArrayWrapper</name>
    <filename>class_array_wrapper.html</filename>
    <templarg>typename T</templarg>
    <templarg>size_t N</templarg>
    <member kind="function">
      <type></type>
      <name>ArrayWrapper</name>
      <anchorfile>class_array_wrapper.html</anchorfile>
      <anchor>ad9cdb5c85d257680a3079b905ec2d300</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ T &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_array_wrapper.html</anchorfile>
      <anchor>a13dd39be1997e473179d421ec3cd655c</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_array_wrapper.html</anchorfile>
      <anchor>aed3d6bb0602a3c4560e10e5a7ff0740f</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::BilateralFilter</name>
    <filename>classroccv_1_1_bilateral_filter.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type></type>
      <name>BilateralFilter</name>
      <anchorfile>classroccv_1_1_bilateral_filter.html</anchorfile>
      <anchor>ae9cae69f582111f5b9aba549d767d0de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_bilateral_filter.html</anchorfile>
      <anchor>aaa74a2f76a0ced8f47ba7e48a440a2a2</anchor>
      <arglist>(hipStream_t stream, const roccv::Tensor &amp;input, const roccv::Tensor &amp;output, int diameter, float sigmaColor, float sigmaSpace, const eBorderType borderMode, const float4 borderValue=make_float4(0, 0, 0, 0), const eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BilateralFilter</name>
      <anchorfile>classroccv_1_1_bilateral_filter.html</anchorfile>
      <anchor>a0e60f108feb630dfe36d792503c791dd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::BndBox</name>
    <filename>classroccv_1_1_bnd_box.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type></type>
      <name>BndBox</name>
      <anchorfile>classroccv_1_1_bnd_box.html</anchorfile>
      <anchor>ad423fdaecbca1d20d037b87bcbe1ca7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_bnd_box.html</anchorfile>
      <anchor>ac913ba386b7e69ac7aa45c9e775e802f</anchor>
      <arglist>(hipStream_t stream, const roccv::Tensor &amp;input, const roccv::Tensor &amp;output, const BndBoxes_t bnd_boxes, eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BndBox</name>
      <anchorfile>classroccv_1_1_bnd_box.html</anchorfile>
      <anchor>a0dd1e6899620790642c020ac9621030d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BndBox_t</name>
    <filename>struct_bnd_box__t.html</filename>
    <member kind="variable">
      <type>Color4_t</type>
      <name>borderColor</name>
      <anchorfile>struct_bnd_box__t.html</anchorfile>
      <anchor>a04cf5ee590aa36f4cfac2999a45f5c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Box_t</type>
      <name>box</name>
      <anchorfile>struct_bnd_box__t.html</anchorfile>
      <anchor>aae3a901957f8ee644d1c91fa7f755a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Color4_t</type>
      <name>fillColor</name>
      <anchorfile>struct_bnd_box__t.html</anchorfile>
      <anchor>a8f15c8e36e5f0cb09d66de41425173cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>thickness</name>
      <anchorfile>struct_bnd_box__t.html</anchorfile>
      <anchor>a23bc003dc941d8d65f2f554e3d691910</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BndBoxes_t</name>
    <filename>struct_bnd_boxes__t.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>batch</name>
      <anchorfile>struct_bnd_boxes__t.html</anchorfile>
      <anchor>aeafcccf942ade59ccb7b6e91eba36091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; BndBox_t &gt;</type>
      <name>boxes</name>
      <anchorfile>struct_bnd_boxes__t.html</anchorfile>
      <anchor>a042a130d3e11514ae20464e99cf2d76d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int32_t &gt;</type>
      <name>numBoxes</name>
      <anchorfile>struct_bnd_boxes__t.html</anchorfile>
      <anchor>ae2dad8d449f4de68d3c276f6a0f14654</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::BorderWrapper</name>
    <filename>classroccv_1_1_border_wrapper.html</filename>
    <templarg>typename T</templarg>
    <templarg>eBorderType BorderType</templarg>
    <member kind="function">
      <type>__device__ __host__ const T</type>
      <name>at</name>
      <anchorfile>classroccv_1_1_border_wrapper.html</anchorfile>
      <anchor>aff2ca88ac7a30cc2a3689ffd278df334</anchor>
      <arglist>(int64_t n, int64_t h, int64_t w, int64_t c) const</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>batches</name>
      <anchorfile>classroccv_1_1_border_wrapper.html</anchorfile>
      <anchor>a15e785cbaf3b329f50a602ed1a7354d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BorderWrapper</name>
      <anchorfile>classroccv_1_1_border_wrapper.html</anchorfile>
      <anchor>af800c27f69f2f7d2a210de0cdaf24b35</anchor>
      <arglist>(const Tensor &amp;tensor, T border_value)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>channels</name>
      <anchorfile>classroccv_1_1_border_wrapper.html</anchorfile>
      <anchor>a7fdef41e7de65c6b92326884aeeebf3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>height</name>
      <anchorfile>classroccv_1_1_border_wrapper.html</anchorfile>
      <anchor>a3c77b0626372d6a54f1392f9c4346f24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>width</name>
      <anchorfile>classroccv_1_1_border_wrapper.html</anchorfile>
      <anchor>a18ea8bf63eafad7640766d9f9b0fc35c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Box_t</name>
    <filename>struct_box__t.html</filename>
    <member kind="variable">
      <type>int32_t</type>
      <name>height</name>
      <anchorfile>struct_box__t.html</anchorfile>
      <anchor>a657e2a4948150afc7d92d71756e82910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>width</name>
      <anchorfile>struct_box__t.html</anchorfile>
      <anchor>a6ea74453e0761c9a2fbfc715aabe33f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>x</name>
      <anchorfile>struct_box__t.html</anchorfile>
      <anchor>aea12efbc9c1e966b4d3efcf5bbec2dd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>y</name>
      <anchorfile>struct_box__t.html</anchorfile>
      <anchor>ae7621b44fdca8f5831425f171b0d40e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Color4_t</name>
    <filename>struct_color4__t.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>c0</name>
      <anchorfile>struct_color4__t.html</anchorfile>
      <anchor>adb81b2f745c9741d3e41fe187341b9f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>c1</name>
      <anchorfile>struct_color4__t.html</anchorfile>
      <anchor>ae797afdda4b78747bc20e54e894c50ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>c2</name>
      <anchorfile>struct_color4__t.html</anchorfile>
      <anchor>a1fd1dd7ea784d34f2176a11609426e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>c3</name>
      <anchorfile>struct_color4__t.html</anchorfile>
      <anchor>a2d4018f0da8b53ff96dce0a178411dbf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::Composite</name>
    <filename>classroccv_1_1_composite.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type></type>
      <name>Composite</name>
      <anchorfile>classroccv_1_1_composite.html</anchorfile>
      <anchor>a98f0c08236f6c145fa94e4428e5ead5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_composite.html</anchorfile>
      <anchor>aba3d61afd6354e2f1601dfebc3cfa5fc</anchor>
      <arglist>(hipStream_t stream, const Tensor &amp;foreground, const Tensor &amp;background, const Tensor &amp;mask, const Tensor &amp;output, const eDeviceType device=eDeviceType::GPU) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Composite</name>
      <anchorfile>classroccv_1_1_composite.html</anchorfile>
      <anchor>a951de383b7fe1c27c294106419bc4e9e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ConversionFactors</name>
    <filename>struct_conversion_factors.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>a</name>
      <anchorfile>struct_conversion_factors.html</anchorfile>
      <anchor>abf15e038a0eac1cbc301d508dfe95b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>b</name>
      <anchorfile>struct_conversion_factors.html</anchorfile>
      <anchor>a8af7e7790df58578978f169f61ce100e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>c</name>
      <anchorfile>struct_conversion_factors.html</anchorfile>
      <anchor>add508ffaee513e9345c9e74e7731143e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>d</name>
      <anchorfile>struct_conversion_factors.html</anchorfile>
      <anchor>abc3a2b5aee9cf3524da783a8143a7791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>e</name>
      <anchorfile>struct_conversion_factors.html</anchorfile>
      <anchor>a3587e97deb3425a99ec54797164ae7e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::CopyMakeBorder</name>
    <filename>classroccv_1_1_copy_make_border.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type></type>
      <name>CopyMakeBorder</name>
      <anchorfile>classroccv_1_1_copy_make_border.html</anchorfile>
      <anchor>a8c6182b8cd494e251e3d20f90c9dd740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_copy_make_border.html</anchorfile>
      <anchor>a93ffbef2b87a73a0d94a12d860249bf1</anchor>
      <arglist>(hipStream_t stream, const Tensor &amp;input, const Tensor &amp;output, int32_t top, int32_t left, eBorderType border_mode, float4 border_value, const eDeviceType device=eDeviceType::GPU) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CopyMakeBorder</name>
      <anchorfile>classroccv_1_1_copy_make_border.html</anchorfile>
      <anchor>a6822b8cc0a3dc7540aeabcff43a0021e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::CustomCrop</name>
    <filename>classroccv_1_1_custom_crop.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_custom_crop.html</anchorfile>
      <anchor>acc462cafe3b9af630ec0cc2b53e73c75</anchor>
      <arglist>(hipStream_t stream, const Tensor &amp;input, const Tensor &amp;output, const Box_t cropRect, const eDeviceType device=eDeviceType::GPU) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::CvtColor</name>
    <filename>classroccv_1_1_cvt_color.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type></type>
      <name>CvtColor</name>
      <anchorfile>classroccv_1_1_cvt_color.html</anchorfile>
      <anchor>a24cc4d7d8a75a64f516154f61d53448a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_cvt_color.html</anchorfile>
      <anchor>a5ee042499c5c3bb4c1994d9649071fd5</anchor>
      <arglist>(hipStream_t stream, const Tensor &amp;input, Tensor &amp;output, eColorConversionCode conversionCode, eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CvtColor</name>
      <anchorfile>classroccv_1_1_cvt_color.html</anchorfile>
      <anchor>aa04c5543532c6ca8764d44f346c51fc8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::DataType</name>
    <filename>classroccv_1_1_data_type.html</filename>
    <member kind="function">
      <type></type>
      <name>DataType</name>
      <anchorfile>classroccv_1_1_data_type.html</anchorfile>
      <anchor>a07ceec6e99ac8f2fe1f83834b9d5ae6e</anchor>
      <arglist>(eDataType etype)</arglist>
    </member>
    <member kind="function">
      <type>eDataType</type>
      <name>etype</name>
      <anchorfile>classroccv_1_1_data_type.html</anchorfile>
      <anchor>aeec580a98f1a029a26b202587494fd13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classroccv_1_1_data_type.html</anchorfile>
      <anchor>a7640528ecb1bc2c6ab8bdc2fc1c0f363</anchor>
      <arglist>(const DataType &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classroccv_1_1_data_type.html</anchorfile>
      <anchor>a1ff1da0ec89ab060be2543ed23ebc6cd</anchor>
      <arglist>(const eDataType &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classroccv_1_1_data_type.html</anchorfile>
      <anchor>ab2410411d7c153b29c206d8f18ddcdd9</anchor>
      <arglist>(const DataType &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classroccv_1_1_data_type.html</anchorfile>
      <anchor>a41b828905fcc2f4549184add1465631c</anchor>
      <arglist>(const eDataType &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classroccv_1_1_data_type.html</anchorfile>
      <anchor>a4f1ab008f8baa88035d04646c288acea</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::Exception</name>
    <filename>classroccv_1_1_exception.html</filename>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classroccv_1_1_exception.html</anchorfile>
      <anchor>ac5597ca423e503635fb956447e68d918</anchor>
      <arglist>(eStatusType customStatus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classroccv_1_1_exception.html</anchorfile>
      <anchor>a608391351b2687ac95e4f7a907e6d2c1</anchor>
      <arglist>(std::string message, eStatusType customStatus)</arglist>
    </member>
    <member kind="function">
      <type>eStatusType</type>
      <name>getStatusEnum</name>
      <anchorfile>classroccv_1_1_exception.html</anchorfile>
      <anchor>a39dc32befc9d53534c8599e2e20bb5b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>classroccv_1_1_exception.html</anchorfile>
      <anchor>afc8cafeed68feab6d43ed64d944fc150</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>eStatusType</type>
      <name>customStatus_</name>
      <anchorfile>classroccv_1_1_exception.html</anchorfile>
      <anchor>ae72dd95c8a7bfd61ecb97c46e5921a3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>errorMessage_</name>
      <anchorfile>classroccv_1_1_exception.html</anchorfile>
      <anchor>a1216e95f8e32da61372ee9a79246b68e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::Flip</name>
    <filename>classroccv_1_1_flip.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type></type>
      <name>Flip</name>
      <anchorfile>classroccv_1_1_flip.html</anchorfile>
      <anchor>aecbdbc69ba9ce7c5eb4b7f9446402e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_flip.html</anchorfile>
      <anchor>a8b60a823b0243c1d510a84fe0f64b6d7</anchor>
      <arglist>(hipStream_t stream, const Tensor &amp;input, const Tensor &amp;output, int32_t flipCode, const eDeviceType device=eDeviceType::GPU) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Flip</name>
      <anchorfile>classroccv_1_1_flip.html</anchorfile>
      <anchor>aed0670dc1c167d578e1bf3b81af33608</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::GammaContrast</name>
    <filename>classroccv_1_1_gamma_contrast.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type></type>
      <name>GammaContrast</name>
      <anchorfile>classroccv_1_1_gamma_contrast.html</anchorfile>
      <anchor>ab3398ec4aa041cf8d4a150d82e2f02ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_gamma_contrast.html</anchorfile>
      <anchor>a492a03e04bac34f865788a0eb240924d</anchor>
      <arglist>(hipStream_t stream, const roccv::Tensor &amp;input, const roccv::Tensor &amp;output, const roccv::Tensor &amp;gamma, eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GammaContrast</name>
      <anchorfile>classroccv_1_1_gamma_contrast.html</anchorfile>
      <anchor>aeb6e3b85b63a82e77271a42b83ac6f8a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::GenericTensorWrapper</name>
    <filename>classroccv_1_1_generic_tensor_wrapper.html</filename>
    <templarg>typename T</templarg>
    <member kind="function">
      <type>__device__ __host__ T &amp;</type>
      <name>at</name>
      <anchorfile>classroccv_1_1_generic_tensor_wrapper.html</anchorfile>
      <anchor>a0160d0a4746534a4ddca0892ae2b3079</anchor>
      <arglist>(ARGS... idx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericTensorWrapper</name>
      <anchorfile>classroccv_1_1_generic_tensor_wrapper.html</anchorfile>
      <anchor>afbbeb61df8dfbd0a5ebb46760f3352a1</anchor>
      <arglist>(const Tensor &amp;tensor)</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>data</name>
      <anchorfile>classroccv_1_1_generic_tensor_wrapper.html</anchorfile>
      <anchor>afe9738fa4998a8228fed46647af6b26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rank</name>
      <anchorfile>classroccv_1_1_generic_tensor_wrapper.html</anchorfile>
      <anchor>a07d9e6cda500be6e0a7e325c8625c3dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; int64_t, ROCCV_TENSOR_MAX_RANK &gt;</type>
      <name>shape</name>
      <anchorfile>classroccv_1_1_generic_tensor_wrapper.html</anchorfile>
      <anchor>a23306e72bc72b0be09718bd1c9292bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; int64_t, ROCCV_TENSOR_MAX_RANK &gt;</type>
      <name>strides</name>
      <anchorfile>classroccv_1_1_generic_tensor_wrapper.html</anchorfile>
      <anchor>a035a2e6c84f259918fdf1fb5b5516814</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>roccv::detail::HasTypeTraits_t</name>
    <filename>structroccv_1_1detail_1_1_has_type_traits__t.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable" static="yes">
      <type>static constexpr bool</type>
      <name>value</name>
      <anchorfile>structroccv_1_1detail_1_1_has_type_traits__t.html</anchorfile>
      <anchor>a13a4ca0a3c52b86472c50d10d5160286</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::Histogram</name>
    <filename>classroccv_1_1_histogram.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type></type>
      <name>Histogram</name>
      <anchorfile>classroccv_1_1_histogram.html</anchorfile>
      <anchor>a55f6635498f5fe62e6e70f3632029480</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_histogram.html</anchorfile>
      <anchor>a0c1968f6e5bef256d3ce21dfa49d1943</anchor>
      <arglist>(hipStream_t stream, const Tensor &amp;input, const Tensor *mask, const Tensor &amp;histogram, eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Histogram</name>
      <anchorfile>classroccv_1_1_histogram.html</anchorfile>
      <anchor>abff43c5d321739ef85dc37e5e82b52b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::ImageFormat</name>
    <filename>classroccv_1_1_image_format.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>channels</name>
      <anchorfile>classroccv_1_1_image_format.html</anchorfile>
      <anchor>a36cf32c3f5fa2872a987054c354f116a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>eDataType</type>
      <name>dtype</name>
      <anchorfile>classroccv_1_1_image_format.html</anchorfile>
      <anchor>ac44154ffe559054c91478829bb62e731</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageFormat</name>
      <anchorfile>classroccv_1_1_image_format.html</anchorfile>
      <anchor>ae67c3cf2eafa76e5c9b34efc3ba4666a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ImageFormat</name>
      <anchorfile>classroccv_1_1_image_format.html</anchorfile>
      <anchor>a7fe4b77e60b88074e9671b77a709b2b8</anchor>
      <arglist>(eDataType dtype, int32_t num_channels)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::ImageWrapper</name>
    <filename>classroccv_1_1_image_wrapper.html</filename>
    <templarg>typename T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>ValueType</name>
      <anchorfile>classroccv_1_1_image_wrapper.html</anchorfile>
      <anchor>a29913043cf67bb87667b0185a9ed0420</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ T &amp;</type>
      <name>at</name>
      <anchorfile>classroccv_1_1_image_wrapper.html</anchorfile>
      <anchor>af3af5f5d292e285f9e45fe05aed0cf4c</anchor>
      <arglist>(int64_t n, int64_t h, int64_t w, int64_t c)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ const T</type>
      <name>at</name>
      <anchorfile>classroccv_1_1_image_wrapper.html</anchorfile>
      <anchor>ac025ae3d8098faa7d556a83476016238</anchor>
      <arglist>(int64_t n, int64_t h, int64_t w, int64_t c) const</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>batches</name>
      <anchorfile>classroccv_1_1_image_wrapper.html</anchorfile>
      <anchor>a3f36d78b1eee518c607ee811e2c1d749</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>channels</name>
      <anchorfile>classroccv_1_1_image_wrapper.html</anchorfile>
      <anchor>aaa99c9965d16617fdfa914ef6839f571</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>height</name>
      <anchorfile>classroccv_1_1_image_wrapper.html</anchorfile>
      <anchor>a30c34268ffd54fe2267449954cdfb22d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageWrapper</name>
      <anchorfile>classroccv_1_1_image_wrapper.html</anchorfile>
      <anchor>acac72332d26afe4c7e13becd3d92267b</anchor>
      <arglist>(const Tensor &amp;tensor)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>width</name>
      <anchorfile>classroccv_1_1_image_wrapper.html</anchorfile>
      <anchor>aa73a8c9847738c64c70853345cceed3e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::InterpolationWrapper</name>
    <filename>classroccv_1_1_interpolation_wrapper.html</filename>
    <templarg>typename T</templarg>
    <templarg>eBorderType B</templarg>
    <templarg>eInterpolationType I</templarg>
    <member kind="function">
      <type>__device__ __host__ const T</type>
      <name>at</name>
      <anchorfile>classroccv_1_1_interpolation_wrapper.html</anchorfile>
      <anchor>a07471ce19a8c87ced5c4d394256a544b</anchor>
      <arglist>(int64_t n, float h, float w, int64_t c) const</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>batches</name>
      <anchorfile>classroccv_1_1_interpolation_wrapper.html</anchorfile>
      <anchor>ac4f32f78f3ddbd09e0c98ee80f979380</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>channels</name>
      <anchorfile>classroccv_1_1_interpolation_wrapper.html</anchorfile>
      <anchor>a133fafbefab9cbb16f784eff8eaf610b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>height</name>
      <anchorfile>classroccv_1_1_interpolation_wrapper.html</anchorfile>
      <anchor>ad11866e6b8c69e11e1b313feceb52404</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InterpolationWrapper</name>
      <anchorfile>classroccv_1_1_interpolation_wrapper.html</anchorfile>
      <anchor>a073746eadafd7f83d41675fcd61dd0b2</anchor>
      <arglist>(const Tensor &amp;tensor, T border_value)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ int64_t</type>
      <name>width</name>
      <anchorfile>classroccv_1_1_interpolation_wrapper.html</anchorfile>
      <anchor>a08589d23d5352a6cded11f88df4b5fc9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::IOperator</name>
    <filename>classroccv_1_1_i_operator.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IOperator</name>
      <anchorfile>classroccv_1_1_i_operator.html</anchorfile>
      <anchor>ab7247b4825f7803f16d0d48fa6ad4226</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>roccv::detail::MakeType_t</name>
    <filename>structroccv_1_1detail_1_1_make_type__t.html</filename>
    <templarg>typename T</templarg>
    <templarg>int C</templarg>
  </compound>
  <compound kind="class">
    <name>MathVector</name>
    <filename>class_math_vector.html</filename>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; U, rank &gt;</type>
      <name>convert_base</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>a98b20caae9c74edca60f22f716d80795</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; U, rank &gt;</type>
      <name>convert_base</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>a98b20caae9c74edca60f22f716d80795</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; U, rank &gt;</type>
      <name>convert_base</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>a98b20caae9c74edca60f22f716d80795</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; U, rank &gt;</type>
      <name>convert_base</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>a98b20caae9c74edca60f22f716d80795</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; T, 4 &gt;</type>
      <name>fill</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>acafae0fe071edf790ffc9731c09167d9</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; T, 4 &gt;</type>
      <name>fill</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>acafae0fe071edf790ffc9731c09167d9</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; T, 4 &gt;</type>
      <name>fill</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>acafae0fe071edf790ffc9731c09167d9</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; T, 4 &gt;</type>
      <name>fill</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>acafae0fe071edf790ffc9731c09167d9</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; T, rank &gt;</type>
      <name>pow</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>aac25a83a92d1f37e6242b89e4deaee4a</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec, double p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; T, rank &gt;</type>
      <name>pow</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>aac25a83a92d1f37e6242b89e4deaee4a</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec, double p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; T, rank &gt;</type>
      <name>pow</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>aac25a83a92d1f37e6242b89e4deaee4a</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec, double p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ HIP_vector_type&lt; T, rank &gt;</type>
      <name>pow</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>aac25a83a92d1f37e6242b89e4deaee4a</anchor>
      <arglist>(HIP_vector_type&lt; T, rank &gt; vec, double p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ void</type>
      <name>trunc</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>a92b5aaa4438f31f310cef4a623ed1a47</anchor>
      <arglist>(HIP_vector_type&lt; T, 4 &gt; vec, HIP_vector_type&lt; T, rank &gt; *dst)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ void</type>
      <name>trunc</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>a92b5aaa4438f31f310cef4a623ed1a47</anchor>
      <arglist>(HIP_vector_type&lt; T, 4 &gt; vec, HIP_vector_type&lt; T, rank &gt; *dst)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ void</type>
      <name>trunc</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>a92b5aaa4438f31f310cef4a623ed1a47</anchor>
      <arglist>(HIP_vector_type&lt; T, 4 &gt; vec, HIP_vector_type&lt; T, rank &gt; *dst)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>__host__ static __device__ void</type>
      <name>trunc</name>
      <anchorfile>class_math_vector.html</anchorfile>
      <anchor>a92b5aaa4438f31f310cef4a623ed1a47</anchor>
      <arglist>(HIP_vector_type&lt; T, 4 &gt; vec, HIP_vector_type&lt; T, rank &gt; *dst)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::detail::math::Matrix</name>
    <filename>classroccv_1_1detail_1_1math_1_1_matrix.html</filename>
    <templarg>class T</templarg>
    <templarg>int M</templarg>
    <templarg>int N</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_matrix.html</anchorfile>
      <anchor>a6445a993563a5ac5817d5c585e0570fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ int</type>
      <name>cols</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_matrix.html</anchorfile>
      <anchor>a9c40caccc1f967cddbd1a45d0a0a76a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ void</type>
      <name>load</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_matrix.html</anchorfile>
      <anchor>ae3113ede2f6ed5882d0c0be1b9616203</anchor>
      <arglist>(const T *data)</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ Vector&lt; T, N &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_matrix.html</anchorfile>
      <anchor>a0ae600893b2f2b193e4ff5e8dbf951d8</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const __host__ __device__ Vector&lt; T, N &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_matrix.html</anchorfile>
      <anchor>aefddcf119d7d98fe6cf5e37e217cc6a5</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_matrix.html</anchorfile>
      <anchor>ad083f9e291e1ac00a2622b203db2c310</anchor>
      <arglist>(int2 c)</arglist>
    </member>
    <member kind="function">
      <type>const __host__ __device__ T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_matrix.html</anchorfile>
      <anchor>a633a4195efe82ae225c0bcd3c7e3431d</anchor>
      <arglist>(int2 c) const</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ int</type>
      <name>rows</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_matrix.html</anchorfile>
      <anchor>ae9bc207c3f41a9a30b7158e76943e5ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ void</type>
      <name>store</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_matrix.html</anchorfile>
      <anchor>a1ed56088df46f457704e2b3ad6991281</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="variable">
      <type>Vector&lt; T, N &gt;</type>
      <name>data_</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_matrix.html</anchorfile>
      <anchor>af186749cb7b2cb063cc7ae063f62e2c5</anchor>
      <arglist>[M]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::NonMaximumSuppression</name>
    <filename>classroccv_1_1_non_maximum_suppression.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type></type>
      <name>NonMaximumSuppression</name>
      <anchorfile>classroccv_1_1_non_maximum_suppression.html</anchorfile>
      <anchor>a573d8dc9363f1947ed80baf87eb7e185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_non_maximum_suppression.html</anchorfile>
      <anchor>ab29f0f5e501ed977daa1a6fe7ab05064</anchor>
      <arglist>(hipStream_t stream, const Tensor &amp;input, const Tensor &amp;output, const Tensor &amp;scores, float scoreThreshold, float iouThreshold, const eDeviceType device=eDeviceType::GPU) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NonMaximumSuppression</name>
      <anchorfile>classroccv_1_1_non_maximum_suppression.html</anchorfile>
      <anchor>abd39ce2aff71c1a3cc9165113678c3d3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::Normalize</name>
    <filename>classroccv_1_1_normalize.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type></type>
      <name>Normalize</name>
      <anchorfile>classroccv_1_1_normalize.html</anchorfile>
      <anchor>ad48784a1a73afa24786a328ffb79f4dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_normalize.html</anchorfile>
      <anchor>a381b969d9634fc1cfb48a8d1648c0ffa</anchor>
      <arglist>(hipStream_t stream, const Tensor &amp;input, const Tensor &amp;base, const Tensor &amp;scale, const Tensor &amp;output, float global_scale, float shift, float epsilon, uint32_t flags, const eDeviceType device=eDeviceType::GPU) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Normalize</name>
      <anchorfile>classroccv_1_1_normalize.html</anchorfile>
      <anchor>a503917cd5f8939025db5ecea6018e62f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Rect_t</name>
    <filename>struct_rect__t.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>batch</name>
      <anchorfile>struct_rect__t.html</anchorfile>
      <anchor>ab33c37ed8f211edbbd95a43f56415418</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bordered</name>
      <anchorfile>struct_rect__t.html</anchorfile>
      <anchor>a9bcf6a396fb7d3ef8f55992bf2e8eee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uchar4</type>
      <name>color</name>
      <anchorfile>struct_rect__t.html</anchorfile>
      <anchor>af7e551dae2cb1c6cfe6aba9bcc888b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>i_bottom</name>
      <anchorfile>struct_rect__t.html</anchorfile>
      <anchor>acee7acc2ed5badab5c4334df2faef5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>i_left</name>
      <anchorfile>struct_rect__t.html</anchorfile>
      <anchor>a4a6db6c96600c0d92e4d9ea10ca73897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>i_right</name>
      <anchorfile>struct_rect__t.html</anchorfile>
      <anchor>a0e5cb99520b99035a6ff84d23f05cca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>i_top</name>
      <anchorfile>struct_rect__t.html</anchorfile>
      <anchor>a9ddddeb6d4e237e3a3e16c9653b5ad3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>o_bottom</name>
      <anchorfile>struct_rect__t.html</anchorfile>
      <anchor>a9d20255bb7bfdeaa684e8d9e66be0a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>o_left</name>
      <anchorfile>struct_rect__t.html</anchorfile>
      <anchor>a2476781352aa571972948fb46af83cc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>o_right</name>
      <anchorfile>struct_rect__t.html</anchorfile>
      <anchor>ab434bfdb2d16214538dc8a493937b531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>o_top</name>
      <anchorfile>struct_rect__t.html</anchorfile>
      <anchor>ae977d8eb52895102fdf27cfec9dc1ab7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::Remap</name>
    <filename>classroccv_1_1_remap.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_remap.html</anchorfile>
      <anchor>aae2ad5cef5167edc4e62cb2ec04a40e0</anchor>
      <arglist>(hipStream_t stream, const roccv::Tensor &amp;input, const roccv::Tensor &amp;output, const roccv::Tensor &amp;map, const eInterpolationType inInterpolation, const eInterpolationType mapInterpolation, const eRemapType mapValueType, const bool alignCorners, const eBorderType borderType, const float4 borderValue, eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Remap</name>
      <anchorfile>classroccv_1_1_remap.html</anchorfile>
      <anchor>aaacb2656ec885039004e7da6dfc791b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Remap</name>
      <anchorfile>classroccv_1_1_remap.html</anchorfile>
      <anchor>ae01186b014dd423d2bec6a2c64a6fb6a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::Resize</name>
    <filename>classroccv_1_1_resize.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_resize.html</anchorfile>
      <anchor>a8878ceeb963ef591bc95fe891c8e2435</anchor>
      <arglist>(hipStream_t stream, const Tensor &amp;in, const Tensor &amp;output, const eInterpolationType interpolation, const eDeviceType device=eDeviceType::GPU) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Resize</name>
      <anchorfile>classroccv_1_1_resize.html</anchorfile>
      <anchor>acde0cf328bd3a86fe4a84e89d750e690</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Resize</name>
      <anchorfile>classroccv_1_1_resize.html</anchorfile>
      <anchor>a302787ecf5cdd5a1c9a68603b5696b09</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::Rotate</name>
    <filename>classroccv_1_1_rotate.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_rotate.html</anchorfile>
      <anchor>a6b87db9dca0abb4713fa54ce0064556c</anchor>
      <arglist>(hipStream_t stream, const roccv::Tensor &amp;input, const roccv::Tensor &amp;output, const double angle_deg, const double2 shift, const eInterpolationType interpolation, const eDeviceType device=eDeviceType::GPU) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rotate</name>
      <anchorfile>classroccv_1_1_rotate.html</anchorfile>
      <anchor>a7831b127e9c5f78c6e141e5dc2be6529</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Rotate</name>
      <anchorfile>classroccv_1_1_rotate.html</anchorfile>
      <anchor>ae7e5698d7b0fe8b8499a6f14010e76f7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>roccv::Size2D</name>
    <filename>structroccv_1_1_size2_d.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>h</name>
      <anchorfile>structroccv_1_1_size2_d.html</anchorfile>
      <anchor>a97da41834f6cdebe5d40a2c53cd0930b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>w</name>
      <anchorfile>structroccv_1_1_size2_d.html</anchorfile>
      <anchor>aba113984298d812f1e6aa8ea9ff2a12f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::detail::StridedDataWrap</name>
    <filename>classroccv_1_1detail_1_1_strided_data_wrap.html</filename>
    <templarg>size_t RANK</templarg>
    <member kind="function">
      <type>__device__ __host__ T &amp;</type>
      <name>at</name>
      <anchorfile>classroccv_1_1detail_1_1_strided_data_wrap.html</anchorfile>
      <anchor>aa03c678ea7aba2e96b08b93ca0ced0b1</anchor>
      <arglist>(ARGS... idx)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ const T &amp;</type>
      <name>at</name>
      <anchorfile>classroccv_1_1detail_1_1_strided_data_wrap.html</anchorfile>
      <anchor>aa29ecd083d02270956838919c946c9c0</anchor>
      <arglist>(ARGS... idx) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StridedDataWrap</name>
      <anchorfile>classroccv_1_1detail_1_1_strided_data_wrap.html</anchorfile>
      <anchor>a01811bf4d86295a8d1ac4362ce94eb80</anchor>
      <arglist>(void *data, ARGS... strides)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::Tensor</name>
    <filename>classroccv_1_1_tensor.html</filename>
    <member kind="typedef">
      <type>TensorRequirements</type>
      <name>Requirements</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>a3ccb39b2ccfe61473e80ff8b38b4cf5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const eDeviceType</type>
      <name>device</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>a2fc816736648718078a5171cd66be26f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const DataType &amp;</type>
      <name>dtype</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>ab9140fe5b338b25481a9cb480d674ce2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TensorData</type>
      <name>exportData</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>a03f7426f087e59be21db8db926ce155c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DerivedTensorData</type>
      <name>exportData</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>a8e2af2c90152ae59def6e83217f92fa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const TensorLayout &amp;</type>
      <name>layout</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>acdc3ebc42408ba774893d9088dbdbe1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Tensor &amp;</type>
      <name>operator=</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>ad93e09fe6b6c922a75906a2f1a7cea6d</anchor>
      <arglist>(const Tensor &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rank</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>a3f92b9a4b84f4adc953dee2e11065c03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Tensor</type>
      <name>reshape</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>ac5388527a12c5287f271524583ad3d84</anchor>
      <arglist>(const TensorShape &amp;new_shape) const</arglist>
    </member>
    <member kind="function">
      <type>Tensor</type>
      <name>reshape</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>acad2d265df28b9d3485ea448172a369a</anchor>
      <arglist>(const TensorShape &amp;new_shape, const DataType &amp;new_dtype) const</arglist>
    </member>
    <member kind="function">
      <type>const TensorShape &amp;</type>
      <name>shape</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>ae244478b3a78a6e4492d0340901b2c7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const int64_t</type>
      <name>shape</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>a66efd261db75c569ddef6514b634e02d</anchor>
      <arglist>(int d) const &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tensor</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>a15df579e1ebf8e775c42ca11f8b5df8f</anchor>
      <arglist>(const Tensor &amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tensor</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>a91ace02407a6e4bc5cb7920479dba2df</anchor>
      <arglist>(const TensorRequirements &amp;reqs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tensor</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>af075e7d048c14967986a695038afc23d</anchor>
      <arglist>(const TensorRequirements &amp;reqs, std::shared_ptr&lt; TensorStorage &gt; data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tensor</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>a2638c0c8cdc31e6ae0aaf7b6749e08fd</anchor>
      <arglist>(const TensorShape &amp;shape, DataType dtype, const eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tensor</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>ad1fc14225901f692f4e69f0d9ccefe79</anchor>
      <arglist>(int num_images, Size2D image_size, ImageFormat fmt, eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tensor</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>a69618f599091e6d268e426d599d1a7c3</anchor>
      <arglist>(Tensor &amp;&amp;other)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Requirements</type>
      <name>CalcRequirements</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>a1f14a8478e9caeb17bfa61a278a45115</anchor>
      <arglist>(const TensorShape &amp;shape, DataType dtype, const eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Requirements</type>
      <name>CalcRequirements</name>
      <anchorfile>classroccv_1_1_tensor.html</anchorfile>
      <anchor>ad115f847503fc70a1413f44dfda2ced6</anchor>
      <arglist>(int num_images, Size2D image_size, ImageFormat fmt, eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>roccv::TensorBuffer</name>
    <filename>structroccv_1_1_tensor_buffer.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>basePtr</name>
      <anchorfile>structroccv_1_1_tensor_buffer.html</anchorfile>
      <anchor>af5d43ac0466df5c95895a7bc8e6b0555</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>roccv::TensorBufferStrided</name>
    <filename>structroccv_1_1_tensor_buffer_strided.html</filename>
    <base>roccv::TensorBuffer</base>
    <member kind="variable">
      <type>std::array&lt; int64_t, ROCCV_TENSOR_MAX_RANK &gt;</type>
      <name>strides</name>
      <anchorfile>structroccv_1_1_tensor_buffer_strided.html</anchorfile>
      <anchor>a13af060693d98bdb5de022b2f2b9d8a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::TensorData</name>
    <filename>classroccv_1_1_tensor_data.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>basePtr</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>a27edf41eea6476faae79de874bf88e06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Derived &gt;</type>
      <name>cast</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>a66a4f32b7fad1ec4fb33cc73a7b6e16e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const eDeviceType</type>
      <name>device</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>acd77c8217801032347610909c9379b35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const DataType &amp;</type>
      <name>dtype</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>ac4f872e1728b9d0ee2a43561992b39ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rank</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>a21b09151a2531e2733481b9cc8298df0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const TensorShape &amp;</type>
      <name>shape</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>a36cb5e9305487e186a061d0e8832618c</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const int64_t</type>
      <name>shape</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>af7d93be188a24bb8f905bd8692290b63</anchor>
      <arglist>(int d) const &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorData</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>a735c1b6246a513646513bfb8fd1a8105</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TensorData</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>af3d53941cc189cc36a0625244b6ae849</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TensorData</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>a8df315a795bd3d3f9ebb8a704d1fee3c</anchor>
      <arglist>(const TensorShape &amp;tshape, const DataType &amp;dtype, const TensorBufferStrided &amp;buffer, const eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TensorBufferStrided</type>
      <name>m_buffer</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>addf1ffe6a2ed2840720d181d06be4059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>eDeviceType</type>
      <name>m_deviceType</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>afb4de4d439577b8650324ca8e0d6920c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DataType</type>
      <name>m_dtype</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>ae4cf6c5f7926ac56014643bd1fea8e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TensorShape</type>
      <name>m_shape</name>
      <anchorfile>classroccv_1_1_tensor_data.html</anchorfile>
      <anchor>a1ad5276d1071f9b55c7bdcb96798c8b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::TensorDataStrided</name>
    <filename>classroccv_1_1_tensor_data_strided.html</filename>
    <base>roccv::TensorData</base>
    <member kind="typedef">
      <type>TensorBufferStrided</type>
      <name>Buffer</name>
      <anchorfile>classroccv_1_1_tensor_data_strided.html</anchorfile>
      <anchor>a6203aa1ca4223e8b99725ce367125da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const int64_t</type>
      <name>stride</name>
      <anchorfile>classroccv_1_1_tensor_data_strided.html</anchorfile>
      <anchor>a26e3fefe8fc9cc4bbb453b16cd2896fa</anchor>
      <arglist>(int d) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorDataStrided</name>
      <anchorfile>classroccv_1_1_tensor_data_strided.html</anchorfile>
      <anchor>a271f03c0f05dc4340f2c37c8392115a3</anchor>
      <arglist>(const TensorShape &amp;tshape, const DataType &amp;dtype, const TensorBufferStrided &amp;buffer, const eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::TensorLayout</name>
    <filename>classroccv_1_1_tensor_layout.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>batch_index</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a2563337fbe7838f25be7592f7de4965c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>channels_index</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>ab52ebb83e9334fb6d7922b62ec8795e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>eTensorLayout</type>
      <name>elayout</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a338c9e7b2e36886708779b577eaa8af5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>height_index</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a8ee7f04cff3be015aca23922ce894055</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_features_index</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a878da82c6dcc1e8c432b7fa05634d7e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a10cac6e5e03f4af1056c4ceaea6465c3</anchor>
      <arglist>(const eTensorLayout &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a6ff3e9ce75e769bd1313ee610386d465</anchor>
      <arglist>(const TensorLayout &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a4699fef6f06bc2c9bafe40c1113a014c</anchor>
      <arglist>(const eTensorLayout &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a23bd10ebf2105ec4fbdf95122aacd5b6</anchor>
      <arglist>(const TensorLayout &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>rank</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>aa46891d79035718e12e72a0314bd6336</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>sift_features_index</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a038535a04e4d6e6ea3ab155fa21e6850</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>sift_octave_layer_index</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a24f18684bf8944a2e8c10983e9ba7437</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorLayout</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a032d3fab1d5f835e72db9d7e9623e9ee</anchor>
      <arglist>(eTensorLayout layout)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>width_index</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>a5c27028f96112587131270b9fafd48ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::unordered_map&lt; eTensorLayout, TensorLayoutDesc &gt;</type>
      <name>layoutDescriptorTable</name>
      <anchorfile>classroccv_1_1_tensor_layout.html</anchorfile>
      <anchor>ac13cff6fd1de3fd293667938e8d447f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>roccv::TensorLayoutDesc</name>
    <filename>structroccv_1_1_tensor_layout_desc.html</filename>
    <member kind="variable">
      <type>int32_t</type>
      <name>batch_index</name>
      <anchorfile>structroccv_1_1_tensor_layout_desc.html</anchorfile>
      <anchor>a5d5f29e1ed2b6beefccd13dbd21cb35d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>channel_index</name>
      <anchorfile>structroccv_1_1_tensor_layout_desc.html</anchorfile>
      <anchor>ab37eaa11d1cf0e89ce7ca5bf109b0238</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>height_index</name>
      <anchorfile>structroccv_1_1_tensor_layout_desc.html</anchorfile>
      <anchor>a70ac6fa97285ebd5be308751145a7ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>max_features_index</name>
      <anchorfile>structroccv_1_1_tensor_layout_desc.html</anchorfile>
      <anchor>a24291095a83313389ddb51812399c563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>rank</name>
      <anchorfile>structroccv_1_1_tensor_layout_desc.html</anchorfile>
      <anchor>aa3a0d7c0d2a895fe434dc4ad87282e12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>sift_features_index</name>
      <anchorfile>structroccv_1_1_tensor_layout_desc.html</anchorfile>
      <anchor>ae06174d017059232d1af892225f17529</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>sift_octave_layer_index</name>
      <anchorfile>structroccv_1_1_tensor_layout_desc.html</anchorfile>
      <anchor>a8c1fe8ad979b40e62c0801400587a64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>width_index</name>
      <anchorfile>structroccv_1_1_tensor_layout_desc.html</anchorfile>
      <anchor>a05166512786d331bea8e15561a409ec0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>roccv::TensorRequirements</name>
    <filename>structroccv_1_1_tensor_requirements.html</filename>
    <member kind="variable">
      <type>eDeviceType</type>
      <name>device</name>
      <anchorfile>structroccv_1_1_tensor_requirements.html</anchorfile>
      <anchor>a98b6309fdbc88bfa7ec5b07fd8ffc307</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DataType</type>
      <name>dtype</name>
      <anchorfile>structroccv_1_1_tensor_requirements.html</anchorfile>
      <anchor>a95c7da28ba5a70e5fea0d6138407911f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TensorShape</type>
      <name>shape</name>
      <anchorfile>structroccv_1_1_tensor_requirements.html</anchorfile>
      <anchor>a81e90f3f15afecc02807cea1eda7afb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; int64_t, ROCCV_TENSOR_MAX_RANK &gt;</type>
      <name>strides</name>
      <anchorfile>structroccv_1_1_tensor_requirements.html</anchorfile>
      <anchor>ad399e834171383efa84e387b5d1cc5ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::TensorShape</name>
    <filename>classroccv_1_1_tensor_shape.html</filename>
    <member kind="function">
      <type>const TensorLayout &amp;</type>
      <name>layout</name>
      <anchorfile>classroccv_1_1_tensor_shape.html</anchorfile>
      <anchor>a405e320b2c264e3d4e6598e8e0095e4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classroccv_1_1_tensor_shape.html</anchorfile>
      <anchor>af5a3c02521d3a8691ac33b99c96614ff</anchor>
      <arglist>(const TensorShape &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>TensorShape &amp;</type>
      <name>operator=</name>
      <anchorfile>classroccv_1_1_tensor_shape.html</anchorfile>
      <anchor>a42a41b0763380cb8b355d611a333905b</anchor>
      <arglist>(const TensorShape &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classroccv_1_1_tensor_shape.html</anchorfile>
      <anchor>a335e519e4ce097c5972ef470c382e5ea</anchor>
      <arglist>(const TensorShape &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>operator[]</name>
      <anchorfile>classroccv_1_1_tensor_shape.html</anchorfile>
      <anchor>a01c9274820e8ad55bb8c774484bad3d4</anchor>
      <arglist>(int32_t i) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classroccv_1_1_tensor_shape.html</anchorfile>
      <anchor>a57b643c89a7fa3c92bdd48d47ec7a6a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorShape</name>
      <anchorfile>classroccv_1_1_tensor_shape.html</anchorfile>
      <anchor>af56152abbf3529aaea694e9318999dc3</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorShape</name>
      <anchorfile>classroccv_1_1_tensor_shape.html</anchorfile>
      <anchor>acd63d7281f2d2a586ac50eab04dbea08</anchor>
      <arglist>(const TensorLayout &amp;layout, const std::initializer_list&lt; const int64_t &gt; shape)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorShape</name>
      <anchorfile>classroccv_1_1_tensor_shape.html</anchorfile>
      <anchor>abc6786c83a4f67d3f96a49a089f93a75</anchor>
      <arglist>(const TensorLayout &amp;layout, const std::span&lt; const int64_t &gt; shape)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::TensorStorage</name>
    <filename>classroccv_1_1_tensor_storage.html</filename>
    <member kind="function">
      <type>void *</type>
      <name>data</name>
      <anchorfile>classroccv_1_1_tensor_storage.html</anchorfile>
      <anchor>a6bfc5dd58063ec172be8127157af508c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const eDeviceType</type>
      <name>device</name>
      <anchorfile>classroccv_1_1_tensor_storage.html</anchorfile>
      <anchor>ad1177ffe12de36b7c7affe8137403814</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorStorage</name>
      <anchorfile>classroccv_1_1_tensor_storage.html</anchorfile>
      <anchor>a3aab68162d71b4dc2ee0ab6416e8d2a3</anchor>
      <arglist>(size_t bytes, eDeviceType device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorStorage</name>
      <anchorfile>classroccv_1_1_tensor_storage.html</anchorfile>
      <anchor>a19bdae2554e699791ec2f60ffb6a556d</anchor>
      <arglist>(void *data, eDeviceType device, eOwnership ownership=eOwnership::OWNING)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TensorStorage</name>
      <anchorfile>classroccv_1_1_tensor_storage.html</anchorfile>
      <anchor>a742c36f38ad0fe4329d62436666b9615</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::Threshold</name>
    <filename>classroccv_1_1_threshold.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_threshold.html</anchorfile>
      <anchor>ab9d35218f30dd6b7ef6866a4b3f48033</anchor>
      <arglist>(hipStream_t stream, const roccv::Tensor &amp;input, const roccv::Tensor &amp;output, const roccv::Tensor &amp;thresh, const roccv::Tensor &amp;maxVal, eDeviceType device=eDeviceType::GPU)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Threshold</name>
      <anchorfile>classroccv_1_1_threshold.html</anchorfile>
      <anchor>a3d421cf09c437a52a53e5a7b36f51acb</anchor>
      <arglist>(eThresholdType threshType, int32_t maxBatchSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Threshold</name>
      <anchorfile>classroccv_1_1_threshold.html</anchorfile>
      <anchor>ad19310b609458bfdd08b59784084c6bf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>roccv::detail::TypeTraits</name>
    <filename>structroccv_1_1detail_1_1_type_traits.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="class">
    <name>roccv::detail::math::Vector</name>
    <filename>classroccv_1_1detail_1_1math_1_1_vector.html</filename>
    <templarg>class T</templarg>
    <templarg>int N</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_vector.html</anchorfile>
      <anchor>aa29f4a322254521e7510a6863e15f796</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__</type>
      <name>operator const T *</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_vector.html</anchorfile>
      <anchor>a307382f7687f05b14eca00ef373a1847</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__</type>
      <name>operator T*</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_vector.html</anchorfile>
      <anchor>a7c544eee5880025221cc053fbd6d05c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_vector.html</anchorfile>
      <anchor>ab205d71b45e79127fba9959a196521fd</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const __host__ __device__ T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_vector.html</anchorfile>
      <anchor>abf513c99a7524592f68118812aafbc75</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ int</type>
      <name>size</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_vector.html</anchorfile>
      <anchor>a239a9912fb8b47a87c9de884ac89ba94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>data_</name>
      <anchorfile>classroccv_1_1detail_1_1math_1_1_vector.html</anchorfile>
      <anchor>a408aacb6c0fd8d94f127d0406a317a43</anchor>
      <arglist>[N]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::WarpAffine</name>
    <filename>classroccv_1_1_warp_affine.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_warp_affine.html</anchorfile>
      <anchor>a21fd9f8dcf07fc4118bab92e6b1d3c3f</anchor>
      <arglist>(hipStream_t stream, const Tensor &amp;input, const Tensor &amp;output, const AffineTransform xform, const bool isInverted, const eInterpolationType interp, const eBorderType borderMode, const float4 borderValue, const eDeviceType device=eDeviceType::GPU) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WarpAffine</name>
      <anchorfile>classroccv_1_1_warp_affine.html</anchorfile>
      <anchor>aa0ceaa314c66003783f099797f408d4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WarpAffine</name>
      <anchorfile>classroccv_1_1_warp_affine.html</anchorfile>
      <anchor>a579f8948f8e2ffbe62ceb888a6853873</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>roccv::WarpPerspective</name>
    <filename>classroccv_1_1_warp_perspective.html</filename>
    <base>roccv::IOperator</base>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classroccv_1_1_warp_perspective.html</anchorfile>
      <anchor>a2b0528202b880d3e374a32c5c859d060</anchor>
      <arglist>(hipStream_t stream, const roccv::Tensor &amp;input, const roccv::Tensor &amp;output, const PerspectiveTransform transMatrix, bool isInverted, const eInterpolationType interpolation, const eBorderType borderType, const float4 borderValue, const eDeviceType device=eDeviceType::GPU) const</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Kernels</name>
    <filename>namespace_kernels.html</filename>
    <namespace>Kernels::Device</namespace>
    <namespace>Kernels::Host</namespace>
    <member kind="function">
      <type>__device__ __host__ float</type>
      <name>ComputeArea</name>
      <anchorfile>namespace_kernels.html</anchorfile>
      <anchor>a84c5d512f761c0ac62d90566bda87b58</anchor>
      <arglist>(const short4 &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ float</type>
      <name>ComputeIoU</name>
      <anchorfile>namespace_kernels.html</anchorfile>
      <anchor>ae5b1607e6860489ee2548b4c6056eecb</anchor>
      <arglist>(const short4 &amp;boxA, const short4 &amp;boxB)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Kernels::Device</name>
    <filename>namespace_kernels_1_1_device.html</filename>
    <member kind="function">
      <type>__global__ void</type>
      <name>bilateral_filter</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a8184bd06e23c452825e705e57c4d4696</anchor>
      <arglist>(SrcWrapper input, DstWrapper output, int radius, float sigmaColor, float sigmaSpace, float spaceCoeff, float colorCoeff)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>binary_generic_kernel</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a5c4cb1bb3a705b356e051c280f76be9a</anchor>
      <arglist>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t batch_size)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>binary_inv_generic_kernel</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>aae5a71372537b1c6a1ad158a2cdf4444</anchor>
      <arglist>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t batch_size)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>bndbox_kernel</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a84f6581d0548f008a46ab848c71b9707</anchor>
      <arglist>(SRC input, DST output, Rect_t *rects, size_t n_rects, int64_t batch, int64_t height, int64_t width)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>composite</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>afbb54f81c7f4b878295095b7f379e010</anchor>
      <arglist>(SrcWrapper foreground, SrcWrapper background, MaskWrapper mask, DstWrapper output)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>copy_make_border</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a083594e7fb82f3b5e5adc68cb6d204c3</anchor>
      <arglist>(SrcDesc src, DstDesc dst, int32_t top, int32_t left)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>custom_crop</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a56f0d65da12060de30824bed421e3bfc</anchor>
      <arglist>(SourceWrapper input, DestWrapper output, Box_t cropRect, size_t channels, size_t batches)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>flip</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>adfee01c9714be85813abf86fb1c1eb1f</anchor>
      <arglist>(SrcWrapper input, DstWrapper output)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>gamma_contrast_wrapped_u8</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a7761f744f094e76d5e301c458113c546</anchor>
      <arglist>(SRC input, DST output, int batch, int width, int height, float *gamma)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>histogram_kernel</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a72069020fca91b66511281956cc1fc46</anchor>
      <arglist>(SRC input, DST output, int64_t batch, int64_t height, int64_t width)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>histogram_kernel</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>ad39f30b6d4034b32cdf0e53c8d3f91b9</anchor>
      <arglist>(SRC input, DST output, MASK mask, int64_t batch, int64_t height, int64_t width)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>non_maximum_suppression</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a8a834d169a33c11b37e1ae0fd4daea7f</anchor>
      <arglist>(roccv::GenericTensorWrapper&lt; short4 &gt; input, roccv::GenericTensorWrapper&lt; uint8_t &gt; output, roccv::GenericTensorWrapper&lt; float &gt; scores, int numBoxes, float scoresThreshold, float iouThreshold)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>normalize</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a79d844bd262c698f3bac1b2a15f3edd5</anchor>
      <arglist>(SrcWrapper input, BaseWrapper base, ScaleWrapper scale, DstWrapper output, float globalScale, float shift, float epsilon)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>remap</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>aa93c0ba896cb1088e6dfd74a85b015b2</anchor>
      <arglist>(SrcWrapper input, DstWrapper output, MapWrapper map)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>resize</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a9d6682f1f2d84f7e13d34ee96ebd1b46</anchor>
      <arglist>(SrcWrapper input, DstWrapper output, float scaleX, float scaleY)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>rgb_or_bgr_to_bgr_or_rgb</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a604d5eeb0e1c327f7b46f815ee4336f0</anchor>
      <arglist>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdxInput, int orderIdxOutput)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>rgb_or_bgr_to_grayscale</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>aabf4659c457a40e279534a940a93b3a8</anchor>
      <arglist>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdxInput)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>rgb_or_bgr_to_yuv</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>ab09b26a18bf6a9f13844b84632b92565</anchor>
      <arglist>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdx, float delta)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>tozero_generic_kernel</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a8d25b7dcfb524c4d17cb8d95bb6e57e6</anchor>
      <arglist>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t batch_size)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>tozeroinv_generic_kernel</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a0155f06ed16567ba998e829b349724b2</anchor>
      <arglist>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t batch_size)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>trunc_generic_kernel</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a1b64184f6beda938ef29ed258d2dca3e</anchor>
      <arglist>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t batch_size)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>warp_perspective</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>a79ddd8c361d020d8ed496b5ee9d571bc</anchor>
      <arglist>(SrcWrapper input, DstWrapper output, Mat mat)</arglist>
    </member>
    <member kind="function">
      <type>__global__ void</type>
      <name>yuv_to_rgb_or_bgr</name>
      <anchorfile>namespace_kernels_1_1_device.html</anchorfile>
      <anchor>ad53cdee68182d48609f08ac561ec83c7</anchor>
      <arglist>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdx, float delta)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Kernels::Host</name>
    <filename>namespace_kernels_1_1_host.html</filename>
    <member kind="function">
      <type>void</type>
      <name>bilateral_filter</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>ab08197fc696e587ea1d67c0354f24079</anchor>
      <arglist>(SrcWrapper input, DstWrapper output, int radius, float sigmaColor, float sigmaSpace, int height, int width, int prevHeight, int prevWidth, float spaceCoeff, float colorCoeff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>binary_generic_kernel</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a289f00771fb1a1d8f6b4bceeae300150</anchor>
      <arglist>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t maxBatchSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>binary_inv_generic_kernel</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>aeb9723182f23e215e9e33dd202fb76c9</anchor>
      <arglist>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t maxBatchSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bndbox_kernel</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a62502f9f0debb2baea5c15bba3212295</anchor>
      <arglist>(SRC input, DST output, Rect_t *rects, size_t n_rects, int64_t batch, int64_t height, int64_t width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>composite</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a90046feeec8c95dc9eb3224805bc2f11</anchor>
      <arglist>(SrcWrapper foreground, SrcWrapper background, MaskWrapper mask, DstWrapper output)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_make_border</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a945c2fde76001853969c6d46adac4d7d</anchor>
      <arglist>(SrcDesc src, DstDesc dst, int32_t top, int32_t left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>custom_crop</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>ace0b60e3c6f5d12d0f17ee10486f3640</anchor>
      <arglist>(SourceWrapper input, DestWrapper output, Box_t cropRect, size_t channels, size_t batches)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flip</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a84da802a09808b8c3b2a307219967165</anchor>
      <arglist>(SrcWrapper input, DstWrapper output)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gamma_contrast_wrapped_u8</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a57372d085376c7cd66ed59610e9d8542</anchor>
      <arglist>(SRC input, DST output, int batch, int width, int height, float *gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>histogram_kernel</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>aebf718f6a6a5a283ccc729e67022a09f</anchor>
      <arglist>(SRC input, DST output, int64_t batch, int64_t height, int64_t width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>histogram_kernel</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>acbd5b6e3bf84acd3392b7fff1e282023</anchor>
      <arglist>(SRC input, DST output, MASK mask, int64_t batch, int64_t height, int64_t width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_maximum_suppression</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a58224aa2a248cdf0efacc2a4968533cb</anchor>
      <arglist>(roccv::GenericTensorWrapper&lt; short4 &gt; input, roccv::GenericTensorWrapper&lt; uint8_t &gt; output, roccv::GenericTensorWrapper&lt; float &gt; scores, int numBoxes, float scoresThreshold, float iouThreshold)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a498827bf305de33337cd8deabe9f5e82</anchor>
      <arglist>(SrcWrapper input, BaseWrapper base, ScaleWrapper scale, DstWrapper output, float globalScale, float shift, float epsilon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remap</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>aa35b770ba457b566678290ce50fa3139</anchor>
      <arglist>(SrcWrapper input, DstWrapper output, MapWrapper map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a08b2c78f0034a3eefca7e3bcb524185f</anchor>
      <arglist>(SrcWrapper input, DstWrapper output, float scaleX, float scaleY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rgb_or_bgr_to_bgr_or_rgb</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>af2244f42fba5c62c6f7de47024230740</anchor>
      <arglist>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdxInput, int orderIdxOutput)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rgb_or_bgr_to_grayscale</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a2c29efc0c64f318f1d25aa1a44d37e80</anchor>
      <arglist>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdxInput)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rgb_or_bgr_to_yuv</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>ad01605284d3559b51e14c7116a8783e2</anchor>
      <arglist>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdx, float delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tozero_generic_kernel</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a825cd015a4b7bf059ee3bbbe39b2e7fa</anchor>
      <arglist>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t maxBatchSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tozeroinv_generic_kernel</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>ae922dbfe36a7f9c26e8b39fd411ab7c6</anchor>
      <arglist>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t maxBatchSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trunc_generic_kernel</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a846cf09471fac27f1a7e76eab872ffd6</anchor>
      <arglist>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t maxBatchSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warp_perspective</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a313c98405077d2c9c91144f38e4056eb</anchor>
      <arglist>(SrcWrapper input, DstWrapper output, Mat mat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yuv_to_rgb_or_bgr</name>
      <anchorfile>namespace_kernels_1_1_host.html</anchorfile>
      <anchor>a5aeecac0a6ca603f3489f973fa11e2c9</anchor>
      <arglist>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdx, float delta)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>roccv</name>
    <filename>namespaceroccv.html</filename>
    <namespace>roccv::detail</namespace>
    <namespace>roccv::ExceptionMessage</namespace>
    <class kind="class">roccv::BilateralFilter</class>
    <class kind="class">roccv::BndBox</class>
    <class kind="class">roccv::BorderWrapper</class>
    <class kind="class">roccv::Composite</class>
    <class kind="class">roccv::CopyMakeBorder</class>
    <class kind="class">roccv::CustomCrop</class>
    <class kind="class">roccv::CvtColor</class>
    <class kind="class">roccv::DataType</class>
    <class kind="class">roccv::Exception</class>
    <class kind="class">roccv::Flip</class>
    <class kind="class">roccv::GammaContrast</class>
    <class kind="class">roccv::GenericTensorWrapper</class>
    <class kind="class">roccv::Histogram</class>
    <class kind="class">roccv::ImageFormat</class>
    <class kind="class">roccv::ImageWrapper</class>
    <class kind="class">roccv::InterpolationWrapper</class>
    <class kind="class">roccv::IOperator</class>
    <class kind="class">roccv::NonMaximumSuppression</class>
    <class kind="class">roccv::Normalize</class>
    <class kind="class">roccv::Remap</class>
    <class kind="class">roccv::Resize</class>
    <class kind="class">roccv::Rotate</class>
    <class kind="struct">roccv::Size2D</class>
    <class kind="class">roccv::Tensor</class>
    <class kind="struct">roccv::TensorBuffer</class>
    <class kind="struct">roccv::TensorBufferStrided</class>
    <class kind="class">roccv::TensorData</class>
    <class kind="class">roccv::TensorDataStrided</class>
    <class kind="class">roccv::TensorLayout</class>
    <class kind="struct">roccv::TensorLayoutDesc</class>
    <class kind="struct">roccv::TensorRequirements</class>
    <class kind="class">roccv::TensorShape</class>
    <class kind="class">roccv::TensorStorage</class>
    <class kind="class">roccv::Threshold</class>
    <class kind="class">roccv::WarpAffine</class>
    <class kind="class">roccv::WarpPerspective</class>
    <member kind="typedef">
      <type>float</type>
      <name>AffineTransform</name>
      <anchorfile>namespaceroccv.html</anchorfile>
      <anchor>a15f4a1cf09cde8d730d28b8ca3ca7d13</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eStatusType</name>
      <anchorfile>namespaceroccv.html</anchorfile>
      <anchor>ad153d3aa032503c4da2ea9395d25f0ca</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceroccv.html" anchor="ad153d3aa032503c4da2ea9395d25f0caad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ad153d3aa032503c4da2ea9395d25f0caa91bf81a15031ab01510ec064d6004db5">INVALID_HANDLE</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ad153d3aa032503c4da2ea9395d25f0caa01855c3c395dbe002f142dafcf953715">INVALID_POINTER</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ad153d3aa032503c4da2ea9395d25f0caad8f24f388e990b9ccf8905b7993b99ae">INVALID_VALUE</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ad153d3aa032503c4da2ea9395d25f0caa71e5e8b8caeedea08ea1f0e75143e047">OUT_OF_BOUNDS</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ad153d3aa032503c4da2ea9395d25f0caac56ddb8056b120c9d5fee05981f219c6">OUT_OF_MEMORY</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ad153d3aa032503c4da2ea9395d25f0caade918d7abaea4c856c3c64720f3cbb7c">INVALID_OPERATION</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ad153d3aa032503c4da2ea9395d25f0caae8c0c70879b5895c615677261d64a1ee">INTERNAL_ERROR</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ad153d3aa032503c4da2ea9395d25f0caa53270059a6bb240d4099226e2d9edab4">INVALID_COMBINATION</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ad153d3aa032503c4da2ea9395d25f0caa3e860a081575fc82cc7b6ed2ca602947">NOT_IMPLEMENTED</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ad153d3aa032503c4da2ea9395d25f0caa02de9649e258d1dd94056e676061e969">NOT_INITIALIZED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eTestStatusType</name>
      <anchorfile>namespaceroccv.html</anchorfile>
      <anchor>ab3844a8838e9a9d1195da9cbc6bf998a</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceroccv.html" anchor="ab3844a8838e9a9d1195da9cbc6bf998aa6d04ea4ab60daf85a03396a190bc356c">TEST_SUCCESS</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ab3844a8838e9a9d1195da9cbc6bf998aac8f51132d8b61759783e5751b89a1f71">TEST_FAILURE</enumvalue>
      <enumvalue file="namespaceroccv.html" anchor="ab3844a8838e9a9d1195da9cbc6bf998aaded53093f15fd3aacd7601dbd7a80968">UNEXPECTED_VALUE</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr ImageFormat</type>
      <name>FMT_F32</name>
      <anchorfile>namespaceroccv.html</anchorfile>
      <anchor>a5a74014ec72e3fd31695205c719c6152</anchor>
      <arglist>(eDataType::DATA_TYPE_F32, 1)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ImageFormat</type>
      <name>FMT_RGB8</name>
      <anchorfile>namespaceroccv.html</anchorfile>
      <anchor>a1d0a30cc0d7573278e90baf2e40a777c</anchor>
      <arglist>(eDataType::DATA_TYPE_U8, 3)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ImageFormat</type>
      <name>FMT_RGBA8</name>
      <anchorfile>namespaceroccv.html</anchorfile>
      <anchor>af5f4f67e3e9df349c916f31d5f14462e</anchor>
      <arglist>(eDataType::DATA_TYPE_U8, 4)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ImageFormat</type>
      <name>FMT_S32</name>
      <anchorfile>namespaceroccv.html</anchorfile>
      <anchor>a9845578416d024f8ea82e355dc720ac0</anchor>
      <arglist>(eDataType::DATA_TYPE_S32, 1)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ImageFormat</type>
      <name>FMT_S8</name>
      <anchorfile>namespaceroccv.html</anchorfile>
      <anchor>a9aa4ac714abe323263166066bfb11b64</anchor>
      <arglist>(eDataType::DATA_TYPE_S8, 1)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ImageFormat</type>
      <name>FMT_U32</name>
      <anchorfile>namespaceroccv.html</anchorfile>
      <anchor>a1bcbc48418ffa3006c72c62996e0fe6a</anchor>
      <arglist>(eDataType::DATA_TYPE_U32, 1)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ImageFormat</type>
      <name>FMT_U8</name>
      <anchorfile>namespaceroccv.html</anchorfile>
      <anchor>a97ffc8abe10d0deb92cd1147f99e79cc</anchor>
      <arglist>(eDataType::DATA_TYPE_U8, 1)</arglist>
    </member>
    <member kind="function">
      <type>Tensor</type>
      <name>TensorWrapData</name>
      <anchorfile>namespaceroccv.html</anchorfile>
      <anchor>afea8f60b486e8c055ab9392f2c134d15</anchor>
      <arglist>(const TensorData &amp;tensor_data)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>roccv::detail</name>
    <filename>namespaceroccv_1_1detail.html</filename>
    <namespace>roccv::detail::math</namespace>
    <class kind="struct">roccv::detail::HasTypeTraits_t</class>
    <class kind="struct">roccv::detail::MakeType_t</class>
    <class kind="class">roccv::detail::StridedDataWrap</class>
    <class kind="struct">roccv::detail::TypeTraits</class>
    <member kind="typedef">
      <type>typename TypeTraits&lt; T &gt;::base_type</type>
      <name>BaseType</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a12a16ca87f8c52e6ad35a806a9426b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MakeType_t&lt; T, C &gt;::type</type>
      <name>MakeType</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a22f7e1ff390f63a7bd92ac5b41a6c410</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_TYPE_TRAITS_0_TO_4</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a76634f084d520e0acfda6109a5a7042e</anchor>
      <arglist>(char, signed char)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_TYPE_TRAITS_0_TO_4</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a7c0991d1dbf07e50e1fbbe63f5a59fe1</anchor>
      <arglist>(float, float)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_TYPE_TRAITS_0_TO_4</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a9fed805a779127ab7a0a15e017e1863f</anchor>
      <arglist>(int, signed int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_TYPE_TRAITS_0_TO_4</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>ae3477906818acf35b7130aa03b4316e7</anchor>
      <arglist>(short, signed short)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_TYPE_TRAITS_0_TO_4</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a4726720f0005d24f901a579f27126634</anchor>
      <arglist>(uchar, unsigned char)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_TYPE_TRAITS_0_TO_4</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a481f3bb72bbfc51488a62e86e7512434</anchor>
      <arglist>(uint, unsigned int)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>get_sdwrapper</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a8be5b7a499ba4ad561cb8dbdd4b96d97</anchor>
      <arglist>(const roccv::Tensor &amp;tensor) -&gt; const StridedDataWrap&lt; layout_get_rank&lt; LAYOUT &gt;()&gt;</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>get_sdwrapper</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>af9da179f8c2b46d46bcc8c0ee1293c88</anchor>
      <arglist>(roccv::Tensor &amp;tensor) -&gt; StridedDataWrap&lt; layout_get_rank&lt; LAYOUT &gt;()&gt;</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>get_sdwrapper&lt; TENSOR_LAYOUT_LNHWC &gt;</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a3b3ed8654e1856dcbdb0e9baf1018d95</anchor>
      <arglist>(const roccv::Tensor &amp;tensor) -&gt; const StridedDataWrap&lt; layout_get_rank&lt; TENSOR_LAYOUT_LNHWC &gt;()&gt;</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>get_sdwrapper&lt; TENSOR_LAYOUT_NHWC &gt;</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a5d708328dac8841d63721a38eae662f8</anchor>
      <arglist>(const roccv::Tensor &amp;tensor) -&gt; const StridedDataWrap&lt; layout_get_rank&lt; TENSOR_LAYOUT_NHWC &gt;()&gt;</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>get_sdwrapper&lt; TENSOR_LAYOUT_NMC &gt;</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>ab7d7beff847ba2875d613c76d7023988</anchor>
      <arglist>(const roccv::Tensor &amp;tensor) -&gt; const StridedDataWrap&lt; layout_get_rank&lt; TENSOR_LAYOUT_NMC &gt;()&gt;</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>get_sdwrapper&lt; TENSOR_LAYOUT_NMD &gt;</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a2c0d50ae162facd793768ca5dcbbe5d0</anchor>
      <arglist>(const roccv::Tensor &amp;tensor) -&gt; const StridedDataWrap&lt; layout_get_rank&lt; TENSOR_LAYOUT_NMD &gt;()&gt;</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ RT &amp;</type>
      <name>GetElement</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>adda0c1378cee5d0c6a24c6d78fc0f0da</anchor>
      <arglist>(T &amp;v, int idx)</arglist>
    </member>
    <member kind="function">
      <type>constexpr size_t</type>
      <name>layout_get_rank</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a5e4907e5587c52455694921044e8f16d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr size_t</type>
      <name>layout_get_rank&lt; TENSOR_LAYOUT_HWC &gt;</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a08eba02e28ffd4db4db94548b2092fcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr size_t</type>
      <name>layout_get_rank&lt; TENSOR_LAYOUT_LNHWC &gt;</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a2e19f4a7f29005449e20587ddf29cee5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr size_t</type>
      <name>layout_get_rank&lt; TENSOR_LAYOUT_NHWC &gt;</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>ae9926f7edb19443e8147c14301dae408</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr size_t</type>
      <name>layout_get_rank&lt; TENSOR_LAYOUT_NMC &gt;</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a403fb5b9dab75008529b375a52f58f9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr size_t</type>
      <name>layout_get_rank&lt; TENSOR_LAYOUT_NMD &gt;</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a00667125fb7df22488f77b5d9297895f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ T</type>
      <name>SaturateCast</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a05175914f40cf839a197f5e6921a2d0b</anchor>
      <arglist>(U v)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ T</type>
      <name>ScalarRangeCast</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>ac50c951f995414d6feda198154de209b</anchor>
      <arglist>(U v)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ T</type>
      <name>ScalarSaturateCast</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a2624260944ce343286d9dd0ed2fe3cef</anchor>
      <arglist>(U v)</arglist>
    </member>
    <member kind="function">
      <type>__device__ __host__ constexpr T</type>
      <name>SetAll</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>ad283c9b3810c9a892eb9192187170a06</anchor>
      <arglist>(Base v)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr bool</type>
      <name>HasTypeTraits</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>affc422303d386fa7c2a00f52beaa52f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr bool</type>
      <name>IsCompound</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a09c8d6e84ec939040ab8e05c757472fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr int</type>
      <name>NumComponents</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>a874cf5548e2f68e2859b5f63ebc19761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr int</type>
      <name>NumElements</name>
      <anchorfile>namespaceroccv_1_1detail.html</anchorfile>
      <anchor>ad1c6ebf43f0f21a5f6f707cf25c9baee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>roccv::detail::math</name>
    <filename>namespaceroccv_1_1detail_1_1math.html</filename>
    <class kind="class">roccv::detail::math::Matrix</class>
    <class kind="class">roccv::detail::math::Vector</class>
    <member kind="function">
      <type></type>
      <name>DEFINE_VECTOR_BINARY_FUNC</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a60fbe2dfbeaa39c566c320664e766cc1</anchor>
      <arglist>(fdividef, vfdividef)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_VECTOR_BINARY_OP</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>aaf92b34bb9ecc9aabc11c97ab74b1688</anchor>
      <arglist>(+, add)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_VECTOR_BINARY_OP</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a6d9925b6287b87b2530102e680ca23d9</anchor>
      <arglist>(-, sub)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_VECTOR_BINARY_OP</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a886f49df1607c4a8655bf60ea65885dc</anchor>
      <arglist>(/, div)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_VECTOR_UNARY_FUNC</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a8afd1172f7fbf167f279af571041cd1c</anchor>
      <arglist>(rsqrtf, vrsqrtf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_VECTOR_UNARY_FUNC</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a71f9c592d39e70eef049f16be712257b</anchor>
      <arglist>(sqrtf, vsqrtf)</arglist>
    </member>
    <member kind="function">
      <type>constexpr __host__ __device__ T</type>
      <name>det</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>af6987d5f8a6905aa718bbd648c9e9b84</anchor>
      <arglist>(const Matrix&lt; T, 0, 0 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>constexpr __host__ __device__ T</type>
      <name>det</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>af49416f5909e2a592b0057d0d86fa837</anchor>
      <arglist>(const Matrix&lt; T, 1, 1 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>constexpr __host__ __device__ T</type>
      <name>det</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>aece01af9649fc8b2939fb4e752e3153e</anchor>
      <arglist>(const Matrix&lt; T, 2, 2 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>constexpr __host__ __device__ T</type>
      <name>det</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a675b59e111ea867d61e6a1a722538b99</anchor>
      <arglist>(const Matrix&lt; T, 3, 3 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ T</type>
      <name>dot</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>ad78812a7a62903013d35baae4e4fa90b</anchor>
      <arglist>(const Vector&lt; T, N &gt; &amp;a, const Vector&lt; T, N &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr __host__ __device__ Matrix&lt; T, 3, 3 &gt;</type>
      <name>inv</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a695bd4b9c094c4a6ddc93765c4110b0a</anchor>
      <arglist>(const Matrix&lt; T, 3, 3 &gt; &amp;m, const T &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>constexpr __host__ __device__ void</type>
      <name>inv_inplace</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>abdbc13e627b5d441e49b6ea2d19aa49a</anchor>
      <arglist>(Matrix&lt; T, 3, 3 &gt; &amp;m, const T &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>constexpr __host__ __device__ bool</type>
      <name>inv_inplace</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a6fb72794f34678297fc6179710fa7dae</anchor>
      <arglist>(Matrix&lt; T, N, N &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ bool</type>
      <name>lu_inplace</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a7cc404fb9711bb1c6224a4fb38f0cb8d</anchor>
      <arglist>(Matrix&lt; T, N, N &gt; &amp;m, Vector&lt; int, N &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ Vector&lt; T, N &gt;</type>
      <name>operator-</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a8576710ce367c7fec7cf3cdd268df94b</anchor>
      <arglist>(const Vector&lt; T, N &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ void</type>
      <name>solve_inplace</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a36478450f28d484ae7eb6ef9c48aaae6</anchor>
      <arglist>(const Matrix&lt; T, N, N &gt; &amp;lu, const Vector&lt; int, N &gt; &amp;p, Vector&lt; T, N &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ bool</type>
      <name>solve_inplace</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>aa89ff4f7eb3295ac12358eb460185e39</anchor>
      <arglist>(const Matrix&lt; T, N, N &gt; &amp;m, Vector&lt; T, N &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>__host__ __device__ void</type>
      <name>swap</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a8d4fc5c84e002375bd47c78c7a0757f0</anchor>
      <arglist>(T &amp;a, T &amp;b)</arglist>
    </member>
    <member kind="variable">
      <type>DEFINE_VECTOR_BINARY_OP *</type>
      <name>mul</name>
      <anchorfile>namespaceroccv_1_1detail_1_1math.html</anchorfile>
      <anchor>a78327ac5675d99bd2419ce9bff06ba0b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>roccv::ExceptionMessage</name>
    <filename>namespaceroccv_1_1_exception_message.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>getMessageByEnum</name>
      <anchorfile>namespaceroccv_1_1_exception_message.html</anchorfile>
      <anchor>a66bd687ed2b9633ed9a9e12abd4e2126</anchor>
      <arglist>(eStatusType status)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMessageByEnum</name>
      <anchorfile>namespaceroccv_1_1_exception_message.html</anchorfile>
      <anchor>a3eeaf3d3e3abc9e47518727276b7275d</anchor>
      <arglist>(eTestStatusType status)</arglist>
    </member>
  </compound>
</tagfile>
