<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classroccv_1_1_flip" kind="class" language="C++" prot="public" final="yes">
    <compoundname>roccv::Flip</compoundname>
    <basecompoundref refid="classroccv_1_1_i_operator" prot="public" virt="non-virtual">roccv::IOperator</basecompoundref>
    <includes refid="op__flip_8hpp" local="no">op_flip.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classroccv_1_1_flip_1aecbdbc69ba9ce7c5eb4b7f9446402e31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>roccv::Flip::Flip</definition>
        <argsstring>()</argsstring>
        <name>Flip</name>
        <qualifiedname>roccv::Flip::Flip</qualifiedname>
        <briefdescription>
<para>Construct a new Op <ref refid="classroccv_1_1_flip" kindref="compound">Flip</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_flip.hpp" line="41" column="5" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/op_flip.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classroccv_1_1_flip_1a8b60a823b0243c1d510a84fe0f64b6d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void roccv::Flip::operator()</definition>
        <argsstring>(hipStream_t stream, const Tensor &amp;input, const Tensor &amp;output, int32_t flipCode, const eDeviceType device=eDeviceType::GPU) const</argsstring>
        <name>operator()</name>
        <qualifiedname>roccv::Flip::operator()</qualifiedname>
        <param>
          <type>hipStream_t</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classroccv_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="classroccv_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>flipCode</declname>
        </param>
        <param>
          <type>const <ref refid="util__enums_8h_1a4ec2e35c9447ccc1764ba80c1490a114" kindref="member">eDeviceType</ref></type>
          <declname>device</declname>
          <defval><ref refid="util__enums_8h_1a4ec2e35c9447ccc1764ba80c1490a114a52f9ec21735243ad9917cda3ca077d32" kindref="member">eDeviceType::GPU</ref></defval>
        </param>
        <briefdescription>
<para>construct a new Op <ref refid="classroccv_1_1_flip" kindref="compound">Flip</ref> object. the object can be used to flip an image batch about the horizontal, vertical or both axes </para>
        </briefdescription>
        <detaileddescription>
<para>Limitations:</para>
<para>Input: Supported TensorLayout(s): [TENSOR_LAYOUT_NHWC, TENSOR_LAYOUT_HWC] Channels: [1, 3, 4] Supported DataType(s): [U8, S32, F32]</para>
<para>Output: Supported TensorLayout(s): [TENSOR_LAYOUT_NHWC, TENSOR_LAYOUT_HWC] Channels: [1, 3, 4] Supported TensorLayout(s) [U8, S32, F32]</para>
<para>Input/Output dependency: <verbatim>  Property      |  Input == Output
 -------------- | -------------
  TensorLayout  | Yes
  DataType      | Yes
  Channels      | Yes
  Width         | Yes
  Height        | Yes
  Batch         | Yes
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>HIP stream to run this operator on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input tensor with image batch data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>Output tensor for storing modified image batch data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flipCode</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classroccv_1_1_flip" kindref="compound">Flip</ref> code used to determine how the images in the batch will be flipped. 0 will flip along the x-axis, a positive number (e.g. 1) will flip around the y-axis, and a negative number (e.g. -1) will flip around both axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The device to run this operation on. (Default: GPU) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_flip.hpp" line="85" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classroccv_1_1_flip_1aed0670dc1c167d578e1bf3b81af33608" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>roccv::Flip::~Flip</definition>
        <argsstring>()</argsstring>
        <name>~Flip</name>
        <qualifiedname>roccv::Flip::~Flip</qualifiedname>
        <briefdescription>
<para>Destroy the Op <ref refid="classroccv_1_1_flip" kindref="compound">Flip</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_flip.hpp" line="47" column="5" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/op_flip.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class for managing the <ref refid="classroccv_1_1_flip" kindref="compound">Flip</ref> operator. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>roccv::Flip</label>
        <link refid="classroccv_1_1_flip"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>roccv::IOperator</label>
        <link refid="classroccv_1_1_i_operator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>roccv::Flip</label>
        <link refid="classroccv_1_1_flip"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>roccv::IOperator</label>
        <link refid="classroccv_1_1_i_operator"/>
      </node>
    </collaborationgraph>
    <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_flip.hpp" line="35" column="1" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/op_flip.hpp" bodystart="35" bodyend="87"/>
    <listofallmembers>
      <member refid="classroccv_1_1_flip_1aecbdbc69ba9ce7c5eb4b7f9446402e31" prot="public" virt="non-virtual"><scope>roccv::Flip</scope><name>Flip</name></member>
      <member refid="classroccv_1_1_flip_1a8b60a823b0243c1d510a84fe0f64b6d7" prot="public" virt="non-virtual"><scope>roccv::Flip</scope><name>operator()</name></member>
      <member refid="classroccv_1_1_flip_1aed0670dc1c167d578e1bf3b81af33608" prot="public" virt="non-virtual"><scope>roccv::Flip</scope><name>~Flip</name></member>
      <member refid="classroccv_1_1_i_operator_1ab7247b4825f7803f16d0d48fa6ad4226" prot="public" virt="virtual"><scope>roccv::Flip</scope><name>~IOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
