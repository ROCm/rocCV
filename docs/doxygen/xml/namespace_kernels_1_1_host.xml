<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespace_kernels_1_1_host" kind="namespace" language="C++">
    <compoundname>Kernels::Host</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_kernels_1_1_host_1ab08197fc696e587ea1d67c0354f24079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SrcWrapper</type>
          </param>
          <param>
            <type>typename DstWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::bilateral_filter</definition>
        <argsstring>(SrcWrapper input, DstWrapper output, int radius, float sigmaColor, float sigmaSpace, int height, int width, int prevHeight, int prevWidth, float spaceCoeff, float colorCoeff)</argsstring>
        <name>bilateral_filter</name>
        <qualifiedname>Kernels::Host::bilateral_filter</qualifiedname>
        <param>
          <type>SrcWrapper</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DstWrapper</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sigmaColor</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sigmaSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prevHeight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prevWidth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>spaceCoeff</declname>
        </param>
        <param>
          <type>float</type>
          <declname>colorCoeff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/bilateral_filter_host.hpp" line="37" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/bilateral_filter_host.hpp" bodystart="37" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a289f00771fb1a1d8f6b4bceeae300150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::binary_generic_kernel</definition>
        <argsstring>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t maxBatchSize)</argsstring>
        <name>binary_generic_kernel</name>
        <qualifiedname>Kernels::Host::binary_generic_kernel</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>thresh</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>maxVal</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>maxBatchSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/thresholding_host.hpp" line="32" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/thresholding_host.hpp" bodystart="32" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1aeb9723182f23e215e9e33dd202fb76c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::binary_inv_generic_kernel</definition>
        <argsstring>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t maxBatchSize)</argsstring>
        <name>binary_inv_generic_kernel</name>
        <qualifiedname>Kernels::Host::binary_inv_generic_kernel</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>thresh</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>maxVal</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>maxBatchSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/thresholding_host.hpp" line="51" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/thresholding_host.hpp" bodystart="51" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a62502f9f0debb2baea5c15bba3212295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>has_alpha</declname>
            <defname>has_alpha</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::bndbox_kernel</definition>
        <argsstring>(SRC input, DST output, Rect_t *rects, size_t n_rects, int64_t batch, int64_t height, int64_t width)</argsstring>
        <name>bndbox_kernel</name>
        <qualifiedname>Kernels::Host::bndbox_kernel</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="struct_rect__t" kindref="compound">Rect_t</ref> *</type>
          <declname>rects</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_rects</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/bnd_box_host.hpp" line="32" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/bnd_box_host.hpp" bodystart="32" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a90046feeec8c95dc9eb3224805bc2f11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SrcWrapper</type>
          </param>
          <param>
            <type>typename MaskWrapper</type>
          </param>
          <param>
            <type>typename DstWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::composite</definition>
        <argsstring>(SrcWrapper foreground, SrcWrapper background, MaskWrapper mask, DstWrapper output)</argsstring>
        <name>composite</name>
        <qualifiedname>Kernels::Host::composite</qualifiedname>
        <param>
          <type>SrcWrapper</type>
          <declname>foreground</declname>
        </param>
        <param>
          <type>SrcWrapper</type>
          <declname>background</declname>
        </param>
        <param>
          <type>MaskWrapper</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>DstWrapper</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/composite_host.hpp" line="29" column="13" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/composite_host.hpp" bodystart="29" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a945c2fde76001853969c6d46adac4d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SrcDesc</type>
          </param>
          <param>
            <type>typename DstDesc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::copy_make_border</definition>
        <argsstring>(SrcDesc src, DstDesc dst, int32_t top, int32_t left)</argsstring>
        <name>copy_make_border</name>
        <qualifiedname>Kernels::Host::copy_make_border</qualifiedname>
        <param>
          <type>SrcDesc</type>
          <declname>src</declname>
        </param>
        <param>
          <type>DstDesc</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>left</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/copy_make_border_host.hpp" line="29" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/copy_make_border_host.hpp" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1ace0b60e3c6f5d12d0f17ee10486f3640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SourceWrapper</type>
          </param>
          <param>
            <type>typename DestWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::custom_crop</definition>
        <argsstring>(SourceWrapper input, DestWrapper output, Box_t cropRect, size_t channels, size_t batches)</argsstring>
        <name>custom_crop</name>
        <qualifiedname>Kernels::Host::custom_crop</qualifiedname>
        <param>
          <type>SourceWrapper</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DestWrapper</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="struct_box__t" kindref="compound">Box_t</ref></type>
          <declname>cropRect</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>batches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/custom_crop_host.hpp" line="32" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/custom_crop_host.hpp" bodystart="32" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a84da802a09808b8c3b2a307219967165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="operator__types_8h_1ac8a8fd6e707e92c323faa53468caab01" kindref="member">eAxis</ref></type>
            <declname>FlipType</declname>
            <defname>FlipType</defname>
          </param>
          <param>
            <type>typename SrcWrapper</type>
          </param>
          <param>
            <type>typename DstWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::flip</definition>
        <argsstring>(SrcWrapper input, DstWrapper output)</argsstring>
        <name>flip</name>
        <qualifiedname>Kernels::Host::flip</qualifiedname>
        <param>
          <type>SrcWrapper</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DstWrapper</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/flip_host.hpp" line="28" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/flip_host.hpp" bodystart="28" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a57372d085376c7cd66ed59610e9d8542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::gamma_contrast_wrapped_u8</definition>
        <argsstring>(SRC input, DST output, int batch, int width, int height, float *gamma)</argsstring>
        <name>gamma_contrast_wrapped_u8</name>
        <qualifiedname>Kernels::Host::gamma_contrast_wrapped_u8</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/gamma_contrast_host.hpp" line="32" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/gamma_contrast_host.hpp" bodystart="32" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1aebf718f6a6a5a283ccc729e67022a09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename OUT</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::histogram_kernel</definition>
        <argsstring>(SRC input, DST output, int64_t batch, int64_t height, int64_t width)</argsstring>
        <name>histogram_kernel</name>
        <qualifiedname>Kernels::Host::histogram_kernel</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/histogram_host.hpp" line="32" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/histogram_host.hpp" bodystart="32" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1acbd5b6e3bf84acd3392b7fff1e282023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename OUT</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
          <param>
            <type>typename MASK</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::histogram_kernel</definition>
        <argsstring>(SRC input, DST output, MASK mask, int64_t batch, int64_t height, int64_t width)</argsstring>
        <name>histogram_kernel</name>
        <qualifiedname>Kernels::Host::histogram_kernel</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>MASK</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/histogram_host.hpp" line="45" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/histogram_host.hpp" bodystart="45" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a58224aa2a248cdf0efacc2a4968533cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Kernels::Host::non_maximum_suppression</definition>
        <argsstring>(roccv::GenericTensorWrapper&lt; short4 &gt; input, roccv::GenericTensorWrapper&lt; uint8_t &gt; output, roccv::GenericTensorWrapper&lt; float &gt; scores, int numBoxes, float scoresThreshold, float iouThreshold)</argsstring>
        <name>non_maximum_suppression</name>
        <qualifiedname>Kernels::Host::non_maximum_suppression</qualifiedname>
        <param>
          <type><ref refid="classroccv_1_1_generic_tensor_wrapper" kindref="compound">roccv::GenericTensorWrapper</ref>&lt; short4 &gt;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classroccv_1_1_generic_tensor_wrapper" kindref="compound">roccv::GenericTensorWrapper</ref>&lt; uint8_t &gt;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="classroccv_1_1_generic_tensor_wrapper" kindref="compound">roccv::GenericTensorWrapper</ref>&lt; float &gt;</type>
          <declname>scores</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numBoxes</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scoresThreshold</declname>
        </param>
        <param>
          <type>float</type>
          <declname>iouThreshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/non_max_suppression_host.hpp" line="31" column="13" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/non_max_suppression_host.hpp" bodystart="31" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a498827bf305de33337cd8deabe9f5e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>ScaleStddev</declname>
            <defname>ScaleStddev</defname>
          </param>
          <param>
            <type>typename SrcWrapper</type>
          </param>
          <param>
            <type>typename DstWrapper</type>
          </param>
          <param>
            <type>typename ScaleWrapper</type>
          </param>
          <param>
            <type>typename BaseWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::normalize</definition>
        <argsstring>(SrcWrapper input, BaseWrapper base, ScaleWrapper scale, DstWrapper output, float globalScale, float shift, float epsilon)</argsstring>
        <name>normalize</name>
        <qualifiedname>Kernels::Host::normalize</qualifiedname>
        <param>
          <type>SrcWrapper</type>
          <declname>input</declname>
        </param>
        <param>
          <type>BaseWrapper</type>
          <declname>base</declname>
        </param>
        <param>
          <type>ScaleWrapper</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>DstWrapper</type>
          <declname>output</declname>
        </param>
        <param>
          <type>float</type>
          <declname>globalScale</declname>
        </param>
        <param>
          <type>float</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/normalize_host.hpp" line="38" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/normalize_host.hpp" bodystart="38" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1aa35b770ba457b566678290ce50fa3139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SrcWrapper</type>
          </param>
          <param>
            <type>typename DstWrapper</type>
          </param>
          <param>
            <type>typename MapWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::remap</definition>
        <argsstring>(SrcWrapper input, DstWrapper output, MapWrapper map)</argsstring>
        <name>remap</name>
        <qualifiedname>Kernels::Host::remap</qualifiedname>
        <param>
          <type>SrcWrapper</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DstWrapper</type>
          <declname>output</declname>
        </param>
        <param>
          <type>MapWrapper</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/remap_host.hpp" line="30" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/remap_host.hpp" bodystart="30" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a08b2c78f0034a3eefca7e3bcb524185f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SrcWrapper</type>
          </param>
          <param>
            <type>typename DstWrapper</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::resize</definition>
        <argsstring>(SrcWrapper input, DstWrapper output, float scaleX, float scaleY)</argsstring>
        <name>resize</name>
        <qualifiedname>Kernels::Host::resize</qualifiedname>
        <param>
          <type>SrcWrapper</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DstWrapper</type>
          <declname>output</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scaleX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scaleY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/resize_host.hpp" line="28" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/resize_host.hpp" bodystart="28" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1af2244f42fba5c62c6f7de47024230740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::rgb_or_bgr_to_bgr_or_rgb</definition>
        <argsstring>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdxInput, int orderIdxOutput)</argsstring>
        <name>rgb_or_bgr_to_bgr_or_rgb</name>
        <qualifiedname>Kernels::Host::rgb_or_bgr_to_bgr_or_rgb</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>batch_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orderIdxInput</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orderIdxOutput</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/cvt_color_host.hpp" line="84" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/cvt_color_host.hpp" bodystart="84" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a2c29efc0c64f318f1d25aa1a44d37e80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::rgb_or_bgr_to_grayscale</definition>
        <argsstring>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdxInput)</argsstring>
        <name>rgb_or_bgr_to_grayscale</name>
        <qualifiedname>Kernels::Host::rgb_or_bgr_to_grayscale</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>batch_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orderIdxInput</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/cvt_color_host.hpp" line="99" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/cvt_color_host.hpp" bodystart="99" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1ad01605284d3559b51e14c7116a8783e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::rgb_or_bgr_to_yuv</definition>
        <argsstring>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdx, float delta)</argsstring>
        <name>rgb_or_bgr_to_yuv</name>
        <qualifiedname>Kernels::Host::rgb_or_bgr_to_yuv</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>batch_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orderIdx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/cvt_color_host.hpp" line="32" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/cvt_color_host.hpp" bodystart="32" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a825cd015a4b7bf059ee3bbbe39b2e7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::tozero_generic_kernel</definition>
        <argsstring>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t maxBatchSize)</argsstring>
        <name>tozero_generic_kernel</name>
        <qualifiedname>Kernels::Host::tozero_generic_kernel</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>thresh</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>maxVal</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>maxBatchSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/thresholding_host.hpp" line="89" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/thresholding_host.hpp" bodystart="89" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1ae922dbfe36a7f9c26e8b39fd411ab7c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::tozeroinv_generic_kernel</definition>
        <argsstring>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t maxBatchSize)</argsstring>
        <name>tozeroinv_generic_kernel</name>
        <qualifiedname>Kernels::Host::tozeroinv_generic_kernel</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>thresh</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>maxVal</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>maxBatchSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/thresholding_host.hpp" line="107" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/thresholding_host.hpp" bodystart="107" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a846cf09471fac27f1a7e76eab872ffd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::trunc_generic_kernel</definition>
        <argsstring>(SRC input, DST output, int64_t height, int64_t width, int64_t channels, const uint8_t *thresh, const uint8_t *maxVal, const int64_t maxBatchSize)</argsstring>
        <name>trunc_generic_kernel</name>
        <qualifiedname>Kernels::Host::trunc_generic_kernel</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>thresh</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>maxVal</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>maxBatchSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/thresholding_host.hpp" line="71" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/thresholding_host.hpp" bodystart="71" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a313c98405077d2c9c91144f38e4056eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SrcWrapper</type>
          </param>
          <param>
            <type>typename DstWrapper</type>
          </param>
          <param>
            <type>typename Mat</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::warp_perspective</definition>
        <argsstring>(SrcWrapper input, DstWrapper output, Mat mat)</argsstring>
        <name>warp_perspective</name>
        <qualifiedname>Kernels::Host::warp_perspective</qualifiedname>
        <param>
          <type>SrcWrapper</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DstWrapper</type>
          <declname>output</declname>
        </param>
        <param>
          <type>Mat</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/warp_perspective_host.hpp" line="30" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/warp_perspective_host.hpp" bodystart="30" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kernels_1_1_host_1a5aeecac0a6ca603f3489f973fa11e2c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SRC</type>
          </param>
          <param>
            <type>typename DST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Kernels::Host::yuv_to_rgb_or_bgr</definition>
        <argsstring>(SRC input, DST output, int64_t width, int64_t height, int64_t batch_size, int orderIdx, float delta)</argsstring>
        <name>yuv_to_rgb_or_bgr</name>
        <qualifiedname>Kernels::Host::yuv_to_rgb_or_bgr</qualifiedname>
        <param>
          <type>SRC</type>
          <declname>input</declname>
        </param>
        <param>
          <type>DST</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>batch_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orderIdx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/cvt_color_host.hpp" line="57" column="6" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/cvt_color_host.hpp" bodystart="57" bodyend="81"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/kernels/host/bilateral_filter_host.hpp" line="34" column="1"/>
  </compounddef>
</doxygen>
