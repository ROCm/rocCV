<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classroccv_1_1_remap" kind="class" language="C++" prot="public" final="yes">
    <compoundname>roccv::Remap</compoundname>
    <basecompoundref refid="classroccv_1_1_i_operator" prot="public" virt="non-virtual">roccv::IOperator</basecompoundref>
    <includes refid="op__remap_8hpp" local="no">op_remap.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classroccv_1_1_remap_1aae2ad5cef5167edc4e62cb2ec04a40e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void roccv::Remap::operator()</definition>
        <argsstring>(hipStream_t stream, const roccv::Tensor &amp;input, const roccv::Tensor &amp;output, const roccv::Tensor &amp;map, const eInterpolationType inInterpolation, const eInterpolationType mapInterpolation, const eRemapType mapValueType, const bool alignCorners, const eBorderType borderType, const float4 borderValue, eDeviceType device=eDeviceType::GPU)</argsstring>
        <name>operator()</name>
        <qualifiedname>roccv::Remap::operator()</qualifiedname>
        <param>
          <type>hipStream_t</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classroccv_1_1_tensor" kindref="compound">roccv::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="classroccv_1_1_tensor" kindref="compound">roccv::Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="classroccv_1_1_tensor" kindref="compound">roccv::Tensor</ref> &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const <ref refid="operator__types_8h_1a09a270009d7de1076424a0201917c528" kindref="member">eInterpolationType</ref></type>
          <declname>inInterpolation</declname>
        </param>
        <param>
          <type>const <ref refid="operator__types_8h_1a09a270009d7de1076424a0201917c528" kindref="member">eInterpolationType</ref></type>
          <declname>mapInterpolation</declname>
        </param>
        <param>
          <type>const <ref refid="operator__types_8h_1adb0c14783c37c072b2263247e84398ff" kindref="member">eRemapType</ref></type>
          <declname>mapValueType</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>alignCorners</declname>
        </param>
        <param>
          <type>const <ref refid="operator__types_8h_1ace89cf8b7e2015ff86ed87ec9ce229c0" kindref="member">eBorderType</ref></type>
          <declname>borderType</declname>
        </param>
        <param>
          <type>const float4</type>
          <declname>borderValue</declname>
        </param>
        <param>
          <type><ref refid="util__enums_8h_1a4ec2e35c9447ccc1764ba80c1490a114" kindref="member">eDeviceType</ref></type>
          <declname>device</declname>
          <defval><ref refid="util__enums_8h_1a4ec2e35c9447ccc1764ba80c1490a114a52f9ec21735243ad9917cda3ca077d32" kindref="member">eDeviceType::GPU</ref></defval>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classroccv_1_1_remap" kindref="compound">Remap</ref> object. The object can be used to remap the pixels in an image according to a new mapping given by a map tensor containing pixel coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para>Limitations:</para>
<para>Input: Supported TensorLayout(s): [NHWC, HWC] Channels: [1 , 3, 4] Supported DataType(s): [U8]</para>
<para>Output: Supported TensorLayout(s): [NHWC, HWC] Channels: [1 , 3, 4] Supported DataType(s): [U8]</para>
<para>Input/Output dependency: <verbatim>  Property      |  Input == Output
 -------------- | -------------
  TensorLayout  | Yes
  DataType      | Yes
  Channels      | Yes
  Width         | Yes
  Height        | Yes
  Batch Size    | Yes
</verbatim> Currently supported remap types:<itemizedlist>
<listitem><para>REMAP_ABSOLUTE</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The HIP stream to run this operation on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input tensor with image batch data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>Output tensor for storing modified image batch data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">map</parametername>
</parameternamelist>
<parameterdescription>
<para>Map tensor containing absolute or relative positions for how to remap the pixels of the input tensor to the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inInterpolation</parametername>
</parameternamelist>
<parameterdescription>
<para>Interpolation type to be used when getting values from the input tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mapInterpolation</parametername>
</parameternamelist>
<parameterdescription>
<para>Interpolation type to be used when getting indices from the map tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mapValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines how the values in the map are interpreted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alignCorners</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to true if corner values are aligned to center points of corner pixels and set to false if they are aligned by the corner points of the corner pixels. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">borderType</parametername>
</parameternamelist>
<parameterdescription>
<para>A border type to identify the pixel extrapolation method (e.g. BORDER_TYPE_CONSTANT or BORDER_TYPE_REPLICATE) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">borderValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Set as 0 unless using a constant border. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The device which this operation should run on. (Default: <ref refid="util__enums_8h_1a4ec2e35c9447ccc1764ba80c1490a114a52f9ec21735243ad9917cda3ca077d32" kindref="member">eDeviceType::GPU</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_remap.hpp" line="97" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classroccv_1_1_remap_1aaacb2656ec885039004e7da6dfc791b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>roccv::Remap::Remap</definition>
        <argsstring>()</argsstring>
        <name>Remap</name>
        <qualifiedname>roccv::Remap::Remap</qualifiedname>
        <briefdescription>
<para>Constructs an <ref refid="classroccv_1_1_remap" kindref="compound">Remap</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_remap.hpp" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classroccv_1_1_remap_1ae01186b014dd423d2bec6a2c64a6fb6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>roccv::Remap::~Remap</definition>
        <argsstring>()</argsstring>
        <name>~Remap</name>
        <qualifiedname>roccv::Remap::~Remap</qualifiedname>
        <briefdescription>
<para>Destroy the <ref refid="classroccv_1_1_remap" kindref="compound">Remap</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_remap.hpp" line="48" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class for managing the remap operator. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>roccv::IOperator</label>
        <link refid="classroccv_1_1_i_operator"/>
      </node>
      <node id="1">
        <label>roccv::Remap</label>
        <link refid="classroccv_1_1_remap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>roccv::IOperator</label>
        <link refid="classroccv_1_1_i_operator"/>
      </node>
      <node id="1">
        <label>roccv::Remap</label>
        <link refid="classroccv_1_1_remap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_remap.hpp" line="35" column="1" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/op_remap.hpp" bodystart="35" bodyend="101"/>
    <listofallmembers>
      <member refid="classroccv_1_1_remap_1aae2ad5cef5167edc4e62cb2ec04a40e0" prot="public" virt="non-virtual"><scope>roccv::Remap</scope><name>operator()</name></member>
      <member refid="classroccv_1_1_remap_1aaacb2656ec885039004e7da6dfc791b6" prot="public" virt="non-virtual"><scope>roccv::Remap</scope><name>Remap</name></member>
      <member refid="classroccv_1_1_i_operator_1ab7247b4825f7803f16d0d48fa6ad4226" prot="public" virt="virtual"><scope>roccv::Remap</scope><name>~IOperator</name></member>
      <member refid="classroccv_1_1_remap_1ae01186b014dd423d2bec6a2c64a6fb6a" prot="public" virt="non-virtual"><scope>roccv::Remap</scope><name>~Remap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
