<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceroccv" kind="namespace" language="C++">
    <compoundname>roccv</compoundname>
    <innerclass refid="classroccv_1_1_bilateral_filter" prot="public">roccv::BilateralFilter</innerclass>
    <innerclass refid="classroccv_1_1_bnd_box" prot="public">roccv::BndBox</innerclass>
    <innerclass refid="classroccv_1_1_border_wrapper" prot="public">roccv::BorderWrapper</innerclass>
    <innerclass refid="classroccv_1_1_composite" prot="public">roccv::Composite</innerclass>
    <innerclass refid="classroccv_1_1_copy_make_border" prot="public">roccv::CopyMakeBorder</innerclass>
    <innerclass refid="classroccv_1_1_custom_crop" prot="public">roccv::CustomCrop</innerclass>
    <innerclass refid="classroccv_1_1_cvt_color" prot="public">roccv::CvtColor</innerclass>
    <innerclass refid="classroccv_1_1_data_type" prot="public">roccv::DataType</innerclass>
    <innerclass refid="classroccv_1_1_exception" prot="public">roccv::Exception</innerclass>
    <innerclass refid="classroccv_1_1_flip" prot="public">roccv::Flip</innerclass>
    <innerclass refid="classroccv_1_1_gamma_contrast" prot="public">roccv::GammaContrast</innerclass>
    <innerclass refid="classroccv_1_1_generic_tensor_wrapper" prot="public">roccv::GenericTensorWrapper</innerclass>
    <innerclass refid="classroccv_1_1_histogram" prot="public">roccv::Histogram</innerclass>
    <innerclass refid="classroccv_1_1_image_format" prot="public">roccv::ImageFormat</innerclass>
    <innerclass refid="classroccv_1_1_image_wrapper" prot="public">roccv::ImageWrapper</innerclass>
    <innerclass refid="classroccv_1_1_interpolation_wrapper" prot="public">roccv::InterpolationWrapper</innerclass>
    <innerclass refid="classroccv_1_1_i_operator" prot="public">roccv::IOperator</innerclass>
    <innerclass refid="classroccv_1_1_non_maximum_suppression" prot="public">roccv::NonMaximumSuppression</innerclass>
    <innerclass refid="classroccv_1_1_normalize" prot="public">roccv::Normalize</innerclass>
    <innerclass refid="classroccv_1_1_remap" prot="public">roccv::Remap</innerclass>
    <innerclass refid="classroccv_1_1_resize" prot="public">roccv::Resize</innerclass>
    <innerclass refid="classroccv_1_1_rotate" prot="public">roccv::Rotate</innerclass>
    <innerclass refid="structroccv_1_1_size2_d" prot="public">roccv::Size2D</innerclass>
    <innerclass refid="classroccv_1_1_tensor" prot="public">roccv::Tensor</innerclass>
    <innerclass refid="structroccv_1_1_tensor_buffer" prot="public">roccv::TensorBuffer</innerclass>
    <innerclass refid="structroccv_1_1_tensor_buffer_strided" prot="public">roccv::TensorBufferStrided</innerclass>
    <innerclass refid="classroccv_1_1_tensor_data" prot="public">roccv::TensorData</innerclass>
    <innerclass refid="classroccv_1_1_tensor_data_strided" prot="public">roccv::TensorDataStrided</innerclass>
    <innerclass refid="classroccv_1_1_tensor_layout" prot="public">roccv::TensorLayout</innerclass>
    <innerclass refid="structroccv_1_1_tensor_layout_desc" prot="public">roccv::TensorLayoutDesc</innerclass>
    <innerclass refid="structroccv_1_1_tensor_requirements" prot="public">roccv::TensorRequirements</innerclass>
    <innerclass refid="classroccv_1_1_tensor_shape" prot="public">roccv::TensorShape</innerclass>
    <innerclass refid="classroccv_1_1_tensor_storage" prot="public">roccv::TensorStorage</innerclass>
    <innerclass refid="classroccv_1_1_threshold" prot="public">roccv::Threshold</innerclass>
    <innerclass refid="classroccv_1_1_warp_affine" prot="public">roccv::WarpAffine</innerclass>
    <innerclass refid="classroccv_1_1_warp_perspective" prot="public">roccv::WarpPerspective</innerclass>
    <innernamespace refid="namespaceroccv_1_1detail">roccv::detail</innernamespace>
    <innernamespace refid="namespaceroccv_1_1_exception_message">roccv::ExceptionMessage</innernamespace>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0ca" prot="public" static="no" strong="yes">
        <type></type>
        <name>eStatusType</name>
        <qualifiedname>roccv::eStatusType</qualifiedname>
        <enumvalue id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0caad0749aaba8b833466dfcbb0428e4f89c" prot="public">
          <name>SUCCESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0caa91bf81a15031ab01510ec064d6004db5" prot="public">
          <name>INVALID_HANDLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0caa01855c3c395dbe002f142dafcf953715" prot="public">
          <name>INVALID_POINTER</name>
          <briefdescription>
<para>handle parameter is invalid. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0caad8f24f388e990b9ccf8905b7993b99ae" prot="public">
          <name>INVALID_VALUE</name>
          <briefdescription>
<para>pointer parameter is invalid (e.g., nullptr). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0caa71e5e8b8caeedea08ea1f0e75143e047" prot="public">
          <name>OUT_OF_BOUNDS</name>
          <briefdescription>
<para>value of parameter is invalid. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0caac56ddb8056b120c9d5fee05981f219c6" prot="public">
          <name>OUT_OF_MEMORY</name>
          <briefdescription>
<para>numerical value of parameter is out of the allowed range. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0caade918d7abaea4c856c3c64720f3cbb7c" prot="public">
          <name>INVALID_OPERATION</name>
          <briefdescription>
<para>execution cannot be completed due to lack of memory. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0caae8c0c70879b5895c615677261d64a1ee" prot="public">
          <name>INTERNAL_ERROR</name>
          <briefdescription>
<para>the operation cannot be executed because of incorrect context. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0caa53270059a6bb240d4099226e2d9edab4" prot="public">
          <name>INVALID_COMBINATION</name>
          <briefdescription>
<para>an error occured during the execution. If a point that shouldn&apos;t be reached is reached. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0caa3e860a081575fc82cc7b6ed2ca602947" prot="public">
          <name>NOT_IMPLEMENTED</name>
          <briefdescription>
<para>invalid permutation of parameters. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ad153d3aa032503c4da2ea9395d25f0caa02de9649e258d1dd94056e676061e969" prot="public">
          <name>NOT_INITIALIZED</name>
          <briefdescription>
<para>cannot execute because the current permutation has not been implemented. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Describes various status types for roccv Exceptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/core/status_type.h" line="30" column="1" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/core/status_type.h" bodystart="30" bodyend="48"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceroccv_1ab3844a8838e9a9d1195da9cbc6bf998a" prot="public" static="no" strong="yes">
        <type></type>
        <name>eTestStatusType</name>
        <qualifiedname>roccv::eTestStatusType</qualifiedname>
        <enumvalue id="namespaceroccv_1ab3844a8838e9a9d1195da9cbc6bf998aa6d04ea4ab60daf85a03396a190bc356c" prot="public">
          <name>TEST_SUCCESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ab3844a8838e9a9d1195da9cbc6bf998aac8f51132d8b61759783e5751b89a1f71" prot="public">
          <name>TEST_FAILURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceroccv_1ab3844a8838e9a9d1195da9cbc6bf998aaded53093f15fd3aacd7601dbd7a80968" prot="public">
          <name>UNEXPECTED_VALUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Describes various status types for roccv test Exceptions. It may be worth moving this into the standalone test folder in the future, as it has no use in the library itself. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/core/status_type.h" line="55" column="1" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/core/status_type.h" bodystart="55" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceroccv_1a15f4a1cf09cde8d730d28b8ca3ca7d13" prot="public" static="no">
        <type>float</type>
        <definition>typedef float roccv::AffineTransform[6]</definition>
        <argsstring>[6]</argsstring>
        <name>AffineTransform</name>
        <qualifiedname>roccv::AffineTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_warp_affine.hpp" line="36" column="15" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/op_warp_affine.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceroccv_1a5a74014ec72e3fd31695205c719c6152" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="classroccv_1_1_image_format" kindref="compound">ImageFormat</ref></type>
        <definition>constexpr ImageFormat roccv::FMT_F32</definition>
        <argsstring>(eDataType::DATA_TYPE_F32, 1)</argsstring>
        <name>FMT_F32</name>
        <qualifiedname>roccv::FMT_F32</qualifiedname>
        <param>
          <type><ref refid="util__enums_8h_1acc461328b82c34604e8b428326a52183a599bcb2b78d69aa8b96f9ffdfae37ddc" kindref="member">eDataType::DATA_TYPE_F32</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" line="59" column="23" declfile="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" declline="59" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="namespaceroccv_1a1d0a30cc0d7573278e90baf2e40a777c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="classroccv_1_1_image_format" kindref="compound">ImageFormat</ref></type>
        <definition>constexpr ImageFormat roccv::FMT_RGB8</definition>
        <argsstring>(eDataType::DATA_TYPE_U8, 3)</argsstring>
        <name>FMT_RGB8</name>
        <qualifiedname>roccv::FMT_RGB8</qualifiedname>
        <param>
          <type><ref refid="util__enums_8h_1acc461328b82c34604e8b428326a52183aa067375620db4d6336d68f82da3b44d6" kindref="member">eDataType::DATA_TYPE_U8</ref></type>
        </param>
        <param>
          <type>3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" line="62" column="23" declfile="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" declline="62" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="namespaceroccv_1af5f4f67e3e9df349c916f31d5f14462e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="classroccv_1_1_image_format" kindref="compound">ImageFormat</ref></type>
        <definition>constexpr ImageFormat roccv::FMT_RGBA8</definition>
        <argsstring>(eDataType::DATA_TYPE_U8, 4)</argsstring>
        <name>FMT_RGBA8</name>
        <qualifiedname>roccv::FMT_RGBA8</qualifiedname>
        <param>
          <type><ref refid="util__enums_8h_1acc461328b82c34604e8b428326a52183aa067375620db4d6336d68f82da3b44d6" kindref="member">eDataType::DATA_TYPE_U8</ref></type>
        </param>
        <param>
          <type>4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" line="65" column="23" declfile="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" declline="65" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="namespaceroccv_1a9845578416d024f8ea82e355dc720ac0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="classroccv_1_1_image_format" kindref="compound">ImageFormat</ref></type>
        <definition>constexpr ImageFormat roccv::FMT_S32</definition>
        <argsstring>(eDataType::DATA_TYPE_S32, 1)</argsstring>
        <name>FMT_S32</name>
        <qualifiedname>roccv::FMT_S32</qualifiedname>
        <param>
          <type><ref refid="util__enums_8h_1acc461328b82c34604e8b428326a52183ad83c4722cff50ad085c991d67b16d84b" kindref="member">eDataType::DATA_TYPE_S32</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" line="56" column="23" declfile="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" declline="56" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="namespaceroccv_1a9aa4ac714abe323263166066bfb11b64" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="classroccv_1_1_image_format" kindref="compound">ImageFormat</ref></type>
        <definition>constexpr ImageFormat roccv::FMT_S8</definition>
        <argsstring>(eDataType::DATA_TYPE_S8, 1)</argsstring>
        <name>FMT_S8</name>
        <qualifiedname>roccv::FMT_S8</qualifiedname>
        <param>
          <type><ref refid="util__enums_8h_1acc461328b82c34604e8b428326a52183a0509f26dc04cac0287e23a840ee5f031" kindref="member">eDataType::DATA_TYPE_S8</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" line="50" column="23" declfile="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" declline="50" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="namespaceroccv_1a1bcbc48418ffa3006c72c62996e0fe6a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="classroccv_1_1_image_format" kindref="compound">ImageFormat</ref></type>
        <definition>constexpr ImageFormat roccv::FMT_U32</definition>
        <argsstring>(eDataType::DATA_TYPE_U32, 1)</argsstring>
        <name>FMT_U32</name>
        <qualifiedname>roccv::FMT_U32</qualifiedname>
        <param>
          <type><ref refid="util__enums_8h_1acc461328b82c34604e8b428326a52183a2060a89ce8797207f5c077782e68b264" kindref="member">eDataType::DATA_TYPE_U32</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" line="53" column="23" declfile="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" declline="53" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="namespaceroccv_1a97ffc8abe10d0deb92cd1147f99e79cc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="classroccv_1_1_image_format" kindref="compound">ImageFormat</ref></type>
        <definition>constexpr ImageFormat roccv::FMT_U8</definition>
        <argsstring>(eDataType::DATA_TYPE_U8, 1)</argsstring>
        <name>FMT_U8</name>
        <qualifiedname>roccv::FMT_U8</qualifiedname>
        <param>
          <type><ref refid="util__enums_8h_1acc461328b82c34604e8b428326a52183aa067375620db4d6336d68f82da3b44d6" kindref="member">eDataType::DATA_TYPE_U8</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" line="47" column="23" declfile="/mnt/c/Users/spolifro/Documents/rocCV/include/core/image_format.hpp" declline="47" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="namespaceroccv_1afea8f60b486e8c055ab9392f2c134d15" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classroccv_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor roccv::TensorWrapData</definition>
        <argsstring>(const TensorData &amp;tensor_data)</argsstring>
        <name>TensorWrapData</name>
        <qualifiedname>roccv::TensorWrapData</qualifiedname>
        <param>
          <type>const <ref refid="classroccv_1_1_tensor_data" kindref="compound">TensorData</ref> &amp;</type>
          <declname>tensor_data</declname>
        </param>
        <briefdescription>
<para>Wraps <ref refid="classroccv_1_1_tensor_data" kindref="compound">TensorData</ref> object into a <ref refid="classroccv_1_1_tensor" kindref="compound">Tensor</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The tensor data to wrap. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The resulting <ref refid="classroccv_1_1_tensor" kindref="compound">Tensor</ref> with the provided <ref refid="classroccv_1_1_tensor_data" kindref="compound">TensorData</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/core/tensor.hpp" line="205" column="15" declfile="/mnt/c/Users/spolifro/Documents/rocCV/include/core/tensor.hpp" declline="205" declcolumn="15"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class for managing the <ref refid="classroccv_1_1_bnd_box" kindref="compound">BndBox</ref> Operator. </para>
    </briefdescription>
    <detaileddescription>
<para>Describes the 2D dimensions of an image.</para>
<para>Class for managing the Warp Affine Operator.</para>
<para>Class for managing the <ref refid="classroccv_1_1_threshold" kindref="compound">Threshold</ref> operator.</para>
<para>Class for managing the <ref refid="classroccv_1_1_resize" kindref="compound">Resize</ref> operator.</para>
<para>Class for managing the <ref refid="classroccv_1_1_histogram" kindref="compound">Histogram</ref> operator.</para>
<para>Class for managing the Gamma Correct operator.</para>
<para>Class for managing the Color Conversion operator.</para>
<para>Class for managing the Custom Crop operator.</para>
<para>Copyright (c) 2025 Advanced Micro Devices, Inc. All rights reserved.</para>
<para>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</para>
<para>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</para>
<para>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</para>
<para>Copyright (c) 2025 Advanced Micro Devices, Inc. All rights reserved.</para>
<para>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</para>
<para>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</para>
<para>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. </para>
<para>Copyright (c) 2025 Advanced Micro Devices, Inc. All rights reserved.</para>
<para>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</para>
<para>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</para>
<para>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. </para>
<para>Copyright (c) 2025 Advanced Micro Devices, Inc. All rights reserved.</para>
<para>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</para>
<para>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</para>
<para>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  </para>
    </detaileddescription>
    <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/common/strided_data_wrap.hpp" line="33" column="1"/>
  </compounddef>
</doxygen>
