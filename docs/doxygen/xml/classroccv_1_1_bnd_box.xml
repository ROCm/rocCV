<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classroccv_1_1_bnd_box" kind="class" language="C++" prot="public" final="yes">
    <compoundname>roccv::BndBox</compoundname>
    <basecompoundref refid="classroccv_1_1_i_operator" prot="public" virt="non-virtual">roccv::IOperator</basecompoundref>
    <includes refid="op__bnd__box_8hpp" local="no">op_bnd_box.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classroccv_1_1_bnd_box_1ad423fdaecbca1d20d037b87bcbe1ca7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>roccv::BndBox::BndBox</definition>
        <argsstring>()</argsstring>
        <name>BndBox</name>
        <qualifiedname>roccv::BndBox::BndBox</qualifiedname>
        <briefdescription>
<para>Constructs a <ref refid="classroccv_1_1_bnd_box" kindref="compound">BndBox</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_bnd_box.hpp" line="43" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classroccv_1_1_bnd_box_1ac913ba386b7e69ac7aa45c9e775e802f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void roccv::BndBox::operator()</definition>
        <argsstring>(hipStream_t stream, const roccv::Tensor &amp;input, const roccv::Tensor &amp;output, const BndBoxes_t bnd_boxes, eDeviceType device=eDeviceType::GPU)</argsstring>
        <name>operator()</name>
        <qualifiedname>roccv::BndBox::operator()</qualifiedname>
        <param>
          <type>hipStream_t</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classroccv_1_1_tensor" kindref="compound">roccv::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="classroccv_1_1_tensor" kindref="compound">roccv::Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bnd_boxes__t" kindref="compound">BndBoxes_t</ref></type>
          <declname>bnd_boxes</declname>
        </param>
        <param>
          <type><ref refid="util__enums_8h_1a4ec2e35c9447ccc1764ba80c1490a114" kindref="member">eDeviceType</ref></type>
          <declname>device</declname>
          <defval><ref refid="util__enums_8h_1a4ec2e35c9447ccc1764ba80c1490a114a52f9ec21735243ad9917cda3ca077d32" kindref="member">eDeviceType::GPU</ref></defval>
        </param>
        <briefdescription>
<para>Executes the <ref refid="classroccv_1_1_bnd_box" kindref="compound">BndBox</ref> operation. <ref refid="classroccv_1_1_bnd_box" kindref="compound">BndBox</ref> can be used to draw bounding boxes on images in a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para>Limitations:</para>
<para>Input: Supported TensorLayout(s): [NHWC, HWC] Channels: [3, 4] Supported DataType(s): [U8]</para>
<para>Output: Supported TensorLayout(s): [NHWC, HWC] Channels: [3, 4] Supported DataType(s): [U8]</para>
<para>Input/Output dependency: <verbatim>  Property      |  Input == Output
 -------------- | -------------
  TensorLayout  | Yes
  DataType      | Yes
  Channels      | Yes
  Width         | Yes
  Height        | Yes
  Batch         | Yes
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The HIP stream to run this operation on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>Output tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bnd_boxes</parametername>
</parameternamelist>
<parameterdescription>
<para>Bounding boxes to apply to input tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>The device which this operation should run on. (Default: <ref refid="util__enums_8h_1a4ec2e35c9447ccc1764ba80c1490a114a52f9ec21735243ad9917cda3ca077d32" kindref="member">eDeviceType::GPU</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_bnd_box.hpp" line="86" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classroccv_1_1_bnd_box_1a0dd1e6899620790642c020ac9621030d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>roccv::BndBox::~BndBox</definition>
        <argsstring>()</argsstring>
        <name>~BndBox</name>
        <qualifiedname>roccv::BndBox::~BndBox</qualifiedname>
        <briefdescription>
<para>Destroy the <ref refid="classroccv_1_1_bnd_box" kindref="compound">BndBox</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_bnd_box.hpp" line="49" column="5"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classroccv_1_1_bnd_box_1af433b123e035a1c300fcfe78fd58b04d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void roccv::BndBox::generateRects</definition>
        <argsstring>(std::vector&lt; Rect_t &gt; &amp;rects, const BndBoxes_t &amp;bnd_boxes, int64_t height, int64_t width)</argsstring>
        <name>generateRects</name>
        <qualifiedname>roccv::BndBox::generateRects</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="struct_rect__t" kindref="compound">Rect_t</ref> &gt; &amp;</type>
          <declname>rects</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bnd_boxes__t" kindref="compound">BndBoxes_t</ref> &amp;</type>
          <declname>bnd_boxes</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_bnd_box.hpp" line="90" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>roccv::BndBox</label>
        <link refid="classroccv_1_1_bnd_box"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>roccv::IOperator</label>
        <link refid="classroccv_1_1_i_operator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>roccv::BndBox</label>
        <link refid="classroccv_1_1_bnd_box"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>roccv::IOperator</label>
        <link refid="classroccv_1_1_i_operator"/>
      </node>
    </collaborationgraph>
    <location file="/mnt/c/Users/spolifro/Documents/rocCV/include/op_bnd_box.hpp" line="36" column="1" bodyfile="/mnt/c/Users/spolifro/Documents/rocCV/include/op_bnd_box.hpp" bodystart="36" bodyend="91"/>
    <listofallmembers>
      <member refid="classroccv_1_1_bnd_box_1ad423fdaecbca1d20d037b87bcbe1ca7e" prot="public" virt="non-virtual"><scope>roccv::BndBox</scope><name>BndBox</name></member>
      <member refid="classroccv_1_1_bnd_box_1af433b123e035a1c300fcfe78fd58b04d" prot="private" virt="non-virtual"><scope>roccv::BndBox</scope><name>generateRects</name></member>
      <member refid="classroccv_1_1_bnd_box_1ac913ba386b7e69ac7aa45c9e775e802f" prot="public" virt="non-virtual"><scope>roccv::BndBox</scope><name>operator()</name></member>
      <member refid="classroccv_1_1_bnd_box_1a0dd1e6899620790642c020ac9621030d" prot="public" virt="non-virtual"><scope>roccv::BndBox</scope><name>~BndBox</name></member>
      <member refid="classroccv_1_1_i_operator_1ab7247b4825f7803f16d0d48fa6ad4226" prot="public" virt="virtual"><scope>roccv::BndBox</scope><name>~IOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
